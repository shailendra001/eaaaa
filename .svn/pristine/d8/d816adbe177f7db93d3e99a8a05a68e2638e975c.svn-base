//
//  MyOrderViewController.m
//  EastonArtGalleries
//
//  Created by Sandeep Kumar on 13/07/16.
//  Copyright Â© 2016 infoicon. All rights reserved.
//

#import "MyOrderViewController.h"
#import "MyOrderViewCell.h"
#import "MyOrderView.h"
#import "OrderDetailViewController.h"

#define COLOR_CELL_BACKGROUND   @"#DEDEDD"
#define COLOR_CELL_HEADER       @"#D4D4D4"
#define COLOR_CELL_TEXT         @"#575656"


@interface MyOrderViewController ()<UITableViewDelegate,UITableViewDataSource,UITextFieldDelegate>
{
        UIActivityIndicatorView *activityIndicator;
        NSMutableArray* arrData;
        NSString* baseURL;

 
}

@end

@implementation MyOrderViewController

static NSString *CellIdentifier1 = @"Cell1";
static NSString *CellIdentifier2 = @"Cell2";


#pragma mark - View controller life cicle

- (void)viewDidLoad {
    
        [super viewDidLoad];
    
        [self cellRegister];
        
        [self config];
        
}

-(void)viewWillAppear:(BOOL)animated{
        [super viewWillAppear:animated];
        
        [self.viewDeckController setLeftLedge:65];
        
        arrData=nil;
        
        [self removeBackgroundLabel];
        [self removeActivityIndicator];
        [self setActivityIndicator];
        [self.tableView reloadData];
        
        //ALL Order : {"user_id":"53","order_type":"1"}
        NSMutableDictionary* dic=[NSMutableDictionary dictionary];
        
        [dic setObject:[[EAGallery sharedClass] memberID]       forKey:@"user_id"];
        [dic setObject:@"1"                                     forKey:@"order_type"];
        
        [self getWebService:[dic mutableCopy]];
        
}

-(void)viewDidAppear:(BOOL)animated{
        
        [super viewDidAppear:animated];
        
        [self.viewDeckController closeLeftViewAnimated:NO];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - THSegmentedPageViewControllerDelegate

- (NSString *)viewControllerTitle {
        return self.viewTitle ? self.viewTitle : self.title;
}


#pragma mark - Custom Methods

-(void)config{
        
        self.tableView.delegate=self;
        self.tableView.dataSource=self;
        
        self.tableView.tableFooterView=[[UIView alloc]init];
        //        self.tableView.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
        
        [self.tableView reloadData];
        
        
}

-(void)setLogoImage{
        UIImage* logoImage = [UIImage imageNamed:LOGO_IMAGE];
        UIImageView* imgLogo=[[UIImageView alloc] initWithImage:logoImage];
        imgLogo.frame=CGRectMake(0, 0, 49, 44);
        
        UIView* logoView=[[UIView alloc]initWithFrame:imgLogo.frame];
        [logoView addSubview:imgLogo];
        
        self.navigationItem.titleView =logoView;
}

-(void)setNav{
        
        self.navigationController.navigationBar.barTintColor = [UIColor blackColor];
        self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
        [self.navigationController.navigationBar
         setTitleTextAttributes:@{NSForegroundColorAttributeName : [UIColor whiteColor]}];
        self.navigationController.navigationBar.translucent = NO;
}

-(void)cellRegister{
        
        [self.tableView registerClass:[MyOrderViewCell class] forCellReuseIdentifier:CellIdentifier1];
//        [self.tableView registerClass:[UpdateProfileViewCell4 class] forCellReuseIdentifier:CellIdentifier2];
        //        //        [self.tableView registerClass:[ArtDetailViewCell3 class] forCellReuseIdentifier:CellIdentifier3];
        //
        UINib *contantsCellNib1 = [UINib nibWithNibName:@"MyOrderViewCell" bundle:nil];
        [self.tableView registerNib:contantsCellNib1 forCellReuseIdentifier:CellIdentifier1];
        //
//        UINib *contantsCellNib2= [UINib nibWithNibName:@"UpdateProfileViewCell4" bundle:nil];
//        [self.tableView registerNib:contantsCellNib2 forCellReuseIdentifier:CellIdentifier2];
        //
        //        UINib *contantsCellNib3 = [UINib nibWithNibName:@"ArtDetailViewCell3" bundle:nil];
        //        [self.tableView registerNib:contantsCellNib3 forCellReuseIdentifier:CellIdentifier3];
        
}

-(void)setActivityIndicator{
        activityIndicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
        activityIndicator.frame = CGRectMake([UIScreen mainScreen].bounds.size.width/2-15,
                                             [UIScreen mainScreen].bounds.size.height/3-15,
                                             30,
                                             30);
        [activityIndicator startAnimating];
        
        
        [activityIndicator removeFromSuperview];
        [self.view addSubview:activityIndicator];
        //[self.view insertSubview:activityIndicator aboveSubview:self.tableView];
        
}

-(void)removeActivityIndicator{
        [activityIndicator stopAnimating];
        [activityIndicator removeFromSuperview];
}

-(void)setBackgroundLabel{
        // Display a message when the table is empty
        UILabel *messageLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
        
        messageLabel.text = @"No data found";
        messageLabel.textColor = [Alert colorFromHexString:COLOR_CELL_TEXT];
        messageLabel.numberOfLines = 0;
        messageLabel.textAlignment = NSTextAlignmentCenter;
        messageLabel.font=[UIFont fontWithName:@"Dosis-Light" size:18];
        [messageLabel sizeToFit];
        
        self.tableView.backgroundView = messageLabel;
        //        self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
}

-(void)removeBackgroundLabel{
        self.tableView.backgroundView = nil;
}

-(void)rightNavBarConfiguration{
        
        //Search icon
        UIImageView*searchImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        searchImageView.image=[UIImage imageNamed:@"search_icon.png"];
        
        UIButton*searchButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        searchButton.frame = CGRectMake(0, 0, 30, 30);
        searchButton.layer.cornerRadius=searchButton.frame.size.width/2;
        [searchButton addTarget:self action:@selector(search:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* searchView=[[UIView alloc]initWithFrame:CGRectMake(0, 5, 30, 30)];
        searchView.backgroundColor=[UIColor clearColor];
        [searchView addSubview:searchImageView];
        [searchView addSubview:searchButton];
        
        //User icon
        
        UIImageView* userImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        userImageView.image=[UIImage imageNamed:@"user_icon.png"];
        
        
        UIButton * userButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        userButton.frame = CGRectMake(0, 0, 30, 30);
        userButton.layer.cornerRadius=userButton.frame.size.width/2;
        [userButton addTarget:self action:@selector(user:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* userView=[[UIView alloc]initWithFrame:CGRectMake(30, 5, 30, 30)];
        userView.backgroundColor=[UIColor clearColor];
        [userView addSubview:userImageView];
        [userView addSubview:userButton];
        
        //Card icon
        UIImageView* cardImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        cardImageView.image=[UIImage imageNamed:@"cart_icon.png"];
        
        
        UIButton * cardButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        cardButton.frame = CGRectMake(0, 0, 30, 30);
        cardButton.layer.cornerRadius=cardButton.frame.size.width/2;
        [cardButton addTarget:self action:@selector(card:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* cardView=[[UIView alloc]initWithFrame:CGRectMake(60, 5, 30, 30)];
        cardView.backgroundColor=[UIColor clearColor];
        [cardView addSubview:cardImageView];
        [cardView addSubview:cardButton];
        
        
        //Card icon
        UIImageView* dotImageView=[[UIImageView alloc]initWithFrame:CGRectMake(13, 6, 3, 20)];
        dotImageView.image=[UIImage imageNamed:@"dotted_menu_icon.png"];
        
        
        UIButton * dotButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        dotButton.frame = CGRectMake(0, 0, 30, 30);
        dotButton.layer.cornerRadius=cardButton.frame.size.width/2;
        [dotButton addTarget:self action:@selector(dot:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* dotView=[[UIView alloc]initWithFrame:CGRectMake(90, 5, 30, 30)];
        dotView.backgroundColor=[UIColor clearColor];
        [dotView addSubview:dotImageView];
        [dotView addSubview:dotButton];
        
        
        
        UIView* rightView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 120, 40)];
        rightView.backgroundColor=[UIColor clearColor];
        
        [rightView addSubview:searchView];
        [rightView addSubview:userView];
        [rightView addSubview:cardView];
        [rightView addSubview:dotView];
        
        UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightView];
        
        [rightView alignmentRectInsets];
        
        
        //        UIBarButtonItem *closeBarItem = [[UIBarButtonItem alloc] initWithCustomView:closeButton];
        //
        //        UIBarButtonItem *sortBarItem = [[UIBarButtonItem alloc] initWithCustomView:sortButton];
        
        
        self.navigationItem.rightBarButtonItem = rightBarItem;//@[closeBarItem,sortBarItem];
}

- (NSArray *)getSortedList:(NSArray *)dictionaries{
        NSMutableArray *results = [[NSMutableArray alloc] init];
        NSMutableDictionary *resultsByOrder_id = [[NSMutableDictionary alloc] init];
        
        dictionaries=[Alert getSortedList:dictionaries key:@"order_id" ascending:YES] ;
        
        for (NSDictionary *dictionary in dictionaries) {
                
                
                id key = [dictionary objectForKey:@"order_id"];
                NSMutableArray *result = [resultsByOrder_id objectForKey:key];
                
                if (result == nil) {
                        result = [[NSMutableArray alloc] init];
                        
                        [result addObject:dictionary];
                        [resultsByOrder_id setObject:result forKey:key];
                        
                        
//                        [result setObject:po forKey:@"PO"];
                }else{
                        [result addObject:dictionary];
                        [resultsByOrder_id setObject:result forKey:key];
                }
                
//                double total = [[result objectForKey:@"TotalQuantityReceived"] doubleValue];
//                total += [[dictionary objectForKey:@"QuantityOrdered"] doubleValue];
//                
//                int count = 1 + [[result objectForKey:@"Count"] intValue];
//                
//                [result setObject:@(total) forKey:@"TotalQuantityReceived"];
//                [result setObject:@(count) forKey:@"Count"];
        }
        
        for (NSString* key in resultsByOrder_id.allKeys) {
                
                
                
                [results addObject:[resultsByOrder_id objectForKey:key]];
        }
        return results;
}

#pragma mark -Call WebService

-(void)getWebService:(NSDictionary*)dic{
        
        const char* className=[NSStringFromSelector(_cmd) UTF8String];
        
        dispatch_queue_t myQueue = dispatch_queue_create(className,NULL);
        dispatch_async(myQueue, ^{
                
                NSString *urlString = JOIN_STRING(kPrefixUrl, kURL_OrderAll);
                
                NSString *postString =[Alert jsonStringWithDictionary:[dic mutableCopy]];
                
                NSLog(@" tempURL :%@---%@",urlString,postString);
                
                NSMutableURLRequest *theRequest=[Alert getRequestUploadImageWithPostString:postString
                                                                                 urlString:urlString
                                                                                    images:nil];
                
                
//                dispatch_async(dispatch_get_main_queue(), ^{
//                        [[SharedClass sharedObject] addProgressHud:self.navigationController.view];
//                        
//                });
                
                NSData *returnData = [NSURLConnection sendSynchronousRequest:theRequest returningResponse:nil error:nil];
                
                if (returnData == nil)
                {
                        dispatch_async(dispatch_get_main_queue(), ^{
                                [[SharedClass sharedObject] hudeHide];
                                [self removeActivityIndicator];
                                [self setBackgroundLabel];
                                
                        });
                }
                else
                {
                        
                        NSDictionary * result =[NSJSONSerialization JSONObjectWithData:returnData
                                                                               options:NSJSONReadingMutableContainers|NSJSONReadingAllowFragments
                                                                                 error:nil];
                        
                        dispatch_async(dispatch_get_main_queue(), ^{
                                [self removeActivityIndicator];
                                [[SharedClass sharedObject] hudeHide];
                                
                        });

                        
                        if ([result isKindOfClass:[NSNull class]] ||result == nil)
                        {
                                dispatch_async(dispatch_get_main_queue(), ^{
                                        [self setBackgroundLabel];
                                });
                        }
                        else
                        {
                                
                                NSLog(@"Response : %@", result);
                                NSString *success  = [result valueForKey:@"success"];
                                NSString *error  = [result valueForKey:@"error"];
                                
                                
                                if (success.boolValue) {
                                        
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [self removeBackgroundLabel];
                                        });
                                        
                                        NSArray*resData = (NSArray*)[result valueForKey:@"orderList"];
                                        NSString*resBaseURL = (NSString*)[result valueForKey:@"base_url"];
                                        
                                        if([resData isKindOfClass:[NSArray class]]){
                                                arrData=resData.count ? [resData mutableCopy] :nil;
                                        }
                                        
                                        if([resBaseURL isKindOfClass:[NSString class]]){
                                                baseURL=!IS_EMPTY(resBaseURL) ? [resBaseURL mutableCopy] :nil;
                                                
                                        }
                                        
//                                        [self getSortedArray:arrData];
                                        arrData=[[self getSortedList:arrData] mutableCopy];
                                        
                                        
                                        
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [UIView transitionWithView:self.tableView
                                                                  duration:0.3
                                                                   options:UIViewAnimationOptionTransitionCrossDissolve
                                                 
                                                                animations:nil
                                                                completion:nil];
                                                
                                                
                                                
                                                [self.tableView reloadData];
                                                
                                        });
                                        
                                }
                                else if (error.boolValue) {
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [self setBackgroundLabel];
                                        });
                                        
                                }
                                else{
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [self setBackgroundLabel];
                                        });
                                }
                                
                        }
                        
                }
                
        });
        
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
        return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
        return arrData.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
        
        NSInteger height=0,top=39,bottom=11,defaultHeight=54.0f;
        
        NSArray* arr=[arrData objectAtIndex:indexPath.row];
        
        float y=top;
        for (NSDictionary* dic in arr) {
                y+=116;
        }
        
        y+=defaultHeight;
        y+=bottom;
        
        height=y;
        
        return height;
        
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
        
        
        if(indexPath.section==0){

                
                MyOrderViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier1 forIndexPath:indexPath];
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.viContainerMain.translatesAutoresizingMaskIntoConstraints=
                cell.viContainerTotal.translatesAutoresizingMaskIntoConstraints=YES;
                
                NSArray* arr=[arrData objectAtIndex:indexPath.row];
                NSDictionary* dic=arr.count ? arr[0] :  nil;
                cell.lblTransID.text=[dic objectForKey:@"transaction_id"];
                
                [[cell.viContainerMain subviews] makeObjectsPerformSelector:@selector(removeFromSuperview)];
                float y=0;
                for (NSDictionary* dic in arr) {
                        
                        // Initialization code
                        MyOrderView* view = [[NSBundle mainBundle] loadNibNamed:@"MyOrderView" owner:self options:nil][0];
                        view.translatesAutoresizingMaskIntoConstraints=YES;
                        
                        CGRect frame=view.frame;
                        frame.origin.y=y;
                        
                        view.lblArtName.text=[dic objectForKey:@"art_name"];
                        view.lblTime.text=[dic objectForKey:@"order_date"];
                        view.lblArtSize.text=[dic objectForKey:@"art_size"];
                        view.lblQuantity.text=[NSString stringWithFormat:@"Quantity : %@",[dic objectForKey:@"quantity"]];
                        
                        NSString* formatedPrice=[Alert getFormatedNumber:[dic objectForKey:@"price"]];
                        view.lblPrice.text=[@"$" stringByAppendingString:formatedPrice];
                        
                        view.frame=frame;
                        [cell.viContainerMain addSubview:view];
                        y+=frame.size.height;
                        
                        
                        //Image
                        NSString* path=baseURL ? [baseURL stringByAppendingPathComponent:[dic objectForKey:@"art_image"]] : nil;
                        
                        NSURL* url=[NSURL URLWithString:path];
                        
                        for (id view in cell.contentView.subviews) {
                                
                                if([view isKindOfClass:[UIActivityIndicatorView class]])
                                        [view removeFromSuperview];
                        }
                        
                        UIActivityIndicatorView *activityIndicator1 = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
                        activityIndicator1.frame = CGRectMake(view.img.frame.size.width/2-15,
                                                              view.img.frame.size.height/2-15,
                                                              30,
                                                              30);
                        [activityIndicator1 startAnimating];
                        activityIndicator1.tag=indexPath.row;
                        
                        [activityIndicator1 removeFromSuperview];
                        [view.img addSubview:activityIndicator1];
                        
                        
                        UIImage* imgPlaceHolder=[UIImage imageNamed:@"no_image.png"];
                        
                        __weak UIImageView *weakImgPic = view.img;
                        [view.img setImageWithURL:url
                                    placeholderImage:imgPlaceHolder
                                             success:^(NSURLRequest *request, NSHTTPURLResponse *response, UIImage *image )
                         {
                                 [activityIndicator1 stopAnimating];
                                 [activityIndicator1 removeFromSuperview];
                                 
                                 UIImageView *strongImgPic = weakImgPic;
                                 if (!strongImgPic) return;
                                 
                                 [UIView transitionWithView:strongImgPic
                                                   duration:0.3
                                                    options:UIViewAnimationOptionTransitionCrossDissolve
                                  
                                                 animations:^{
                                                         strongImgPic.image=image;
                                                         
                                                 }
                                                 completion:NULL];
                                 
                         } failure:NULL];
                
                
                }
                
                CGRect totalFrame=cell.viContainerTotal.frame;
                totalFrame.origin.y=y;
                cell.viContainerTotal.frame=totalFrame;
                y+=totalFrame.size.height;
                
                [cell.viContainerMain addSubview:cell.viContainerTotal];
                
                CGRect mainFrame=cell.viContainerMain.frame;
                mainFrame.size.height=y;
                cell.viContainerMain.frame=mainFrame;
                
                NSNumber* sum = [arr valueForKeyPath: @"@sum.price"];
                
                sum=[NSNumber numberWithFloat:([sum floatValue]+[sum floatValue]*6/100)];
                
                NSString* formatedPrice=[Alert getFormatedNumber:[sum stringValue]];
                cell.lblTotal.text=[@"$" stringByAppendingString:formatedPrice];
                
                
                
                cell.contentView.backgroundColor=[UIColor clearColor];
                
                cell.btnPay.tag=indexPath.row;
                [cell.btnPay addTarget:self action:@selector(showDetail:) forControlEvents:UIControlEventTouchUpInside];
                return cell;
                
        }
        
        return nil;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
        
        [tableView deselectRowAtIndexPath:indexPath animated:YES];
        
}



-(IBAction)showDetail:(id)sender{
        
        UIButton* button=(UIButton*)sender;        
        NSArray* arr=[arrData objectAtIndex:button.tag];
        NSDictionary* dic=arr.count ? arr[0] :  nil;
        
        OrderDetailViewController* vc=GET_VIEW_CONTROLLER(kOrderDetailViewController);
        vc.orderID=[dic objectForKey:@"order_id"];        
        vc.titleString=@"Order Details";
        vc.from=@"back";
        
        MOVE_VIEW_CONTROLLER_VIEW_DECK(vc);
}

@end
