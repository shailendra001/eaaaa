//
//  ArtistDetailViewController.m
//  EastonArtGalleries
//
//  Created by Sandeep Kumar on 30/05/16.
//  Copyright Â© 2016 infoicon. All rights reserved.
//

#import "ArtistDetailViewController.h"
#import "ArtistDetailViewCell1.h"
#import "ArtistDetailViewCell2.h"
#import "ArtistDetailCell3.h"
#import "ArtDetailViewController.h"
#import "ArtCollectionViewController.h"
#import "ReviewViewController.h"

#define COLOR_CELL_BACKGROUND   @"#DEDEDD"
#define COLOR_CELL_HEADER       @"#D4D4D4"
#define COLOR_CELL_TEXT         @"#575656"



@interface ArtistDetailViewController ()<UITableViewDelegate,UITableViewDataSource,EDStarRatingProtocols,EDStarRatingProtocol,DLStarRatingDelegate>
{
        NSDictionary *data;
        UIActivityIndicatorView *activityIndicator;
        BOOL isShowDesc;
        NSArray* arrHeaderTitle;
        NSArray* arrArtList;
        NSArray* arrReview;
        NSString* baseURL;
        DataBaseHandler *dataManager;
        UIView* cardViewGlobal;
        UIView* cardCountViewGlobal;
}


@end

@implementation ArtistDetailViewController

static NSString *CellIdentifier1 = @"Cell1";
static NSString *CellIdentifier2 = @"Cell2";
static NSString *CellIdentifier3 = @"Cell3";


#pragma mark - View controller life cicle

- (void)viewDidLoad {
    
        [super viewDidLoad];
        
        [self cellRegister];
        
        [self config];
        
        [self setLogoImage];
        
        [self rightNavBarConfiguration];
        
        
        
        if(!self.arrArtistDetail.count)
        {
                
                [self setActivityIndicator];
                
                [self getWebService];
        }
        
        
        if([self.from isEqualToString:@"back"]) [self setNav];
        else                                    [self navigationBarConfiguration];
}

-(void)viewWillAppear:(BOOL)animated{
        [super viewWillAppear:animated];
        
        [self.viewDeckController setLeftLedge:65];
        
        [self loadCardCount];
}

-(void)viewDidAppear:(BOOL)animated{
        
        [super viewDidAppear:animated];
        
        [self.viewDeckController closeLeftViewAnimated:NO];
}

- (void)didReceiveMemoryWarning {
        [super didReceiveMemoryWarning];
        // Dispose of any resources that can be recreated.
}

#pragma mark - Custom Methods

-(void)config{
        dataManager = [[DataBaseHandler alloc] initWithDB:DATABASE_NAME];
        
        NSString* firstName=[self.titleString stringByReplacingCharactersInRange:NSMakeRange(0,1)
                                                                      withString:[[self.titleString substringToIndex:1] capitalizedString]];
        arrHeaderTitle=@[
                         @"Biography",
                         @"Reviews",
                         [NSString stringWithFormat:@"Artworks from %@",[Alert getFirstName:firstName]],
                         ];
        
        self.lblTitle.text=[self.titleString uppercaseString];
        self.tableView.delegate=self;
        self.tableView.dataSource=self;
        
        self.tableView.tableFooterView=[[UIView alloc]init];
        self.tableView.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
        
        [self.tableView reloadData];
        
}

-(void)setLogoImage{
        UIImage* logoImage = [UIImage imageNamed:LOGO_IMAGE];
        UIImageView* imgLogo=[[UIImageView alloc] initWithImage:logoImage];
        imgLogo.frame=CGRectMake(0, 0, 49, 44);
        
        UIView* logoView=[[UIView alloc]initWithFrame:imgLogo.frame];
        [logoView addSubview:imgLogo];
        
        self.navigationItem.titleView =logoView;
}

-(void)setNav{
        
        self.navigationController.navigationBar.barTintColor = [UIColor blackColor];
        self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
        [self.navigationController.navigationBar
         setTitleTextAttributes:@{NSForegroundColorAttributeName : [UIColor whiteColor]}];
        self.navigationController.navigationBar.translucent = NO;
}

-(void)cellRegister{
        
        [self.tableView registerClass:[ArtistDetailViewCell1 class] forCellReuseIdentifier:CellIdentifier1];
        [self.tableView registerClass:[ArtistDetailViewCell2 class] forCellReuseIdentifier:CellIdentifier2];
        [self.tableView registerClass:[ArtistDetailCell3 class]     forCellReuseIdentifier:CellIdentifier3];
        
        UINib *contantsCellNib1 = [UINib nibWithNibName:@"ArtistDetailViewCell1" bundle:nil];
        [self.tableView registerNib:contantsCellNib1 forCellReuseIdentifier:CellIdentifier1];
        
        UINib *contantsCellNib2 = [UINib nibWithNibName:@"ArtistDetailViewCell2" bundle:nil];
        [self.tableView registerNib:contantsCellNib2 forCellReuseIdentifier:CellIdentifier2];
//
//        UINib *contantsCellNib3 = [UINib nibWithNibName:@"ArtDetailViewCell3" bundle:nil];
//        [self.tableView registerNib:contantsCellNib3 forCellReuseIdentifier:CellIdentifier3];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(didSelectItemFromArtWorksContainerCellView:) name:@"didSelectItemFromArtWorksContainerCellView" object:nil];
        
}

-(void)setActivityIndicator{
        activityIndicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
        activityIndicator.frame = CGRectMake([UIScreen mainScreen].bounds.size.width/2-15,
                                             [UIScreen mainScreen].bounds.size.height/3-15,
                                             30,
                                             30);
        [activityIndicator startAnimating];
        
        
        [activityIndicator removeFromSuperview];
        [self.view addSubview:activityIndicator];
        [self.view insertSubview:activityIndicator aboveSubview:self.tableView];
        
}

-(void)removeActivityIndicator{
        [activityIndicator stopAnimating];
        [activityIndicator removeFromSuperview];
}

-(void)setBackgroundLabel{
        // Display a message when the table is empty
        UILabel *messageLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
        
        messageLabel.text = @"No data found";
        messageLabel.textColor = [Alert colorFromHexString:COLOR_CELL_TEXT];
        messageLabel.numberOfLines = 0;
        messageLabel.textAlignment = NSTextAlignmentCenter;
        messageLabel.font=[UIFont fontWithName:@"Dosis-Light" size:18];
        [messageLabel sizeToFit];
        
        self.tableView.backgroundView = messageLabel;
        //        self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
}

-(void)removeBackgroundLabel{
        self.tableView.backgroundView = nil;
}

#pragma mark - NSNotification to select table cell

- (void)didSelectItemFromArtWorksContainerCellView:(NSNotification *)notification{
        NSDictionary *cellData = [notification object];
        if (cellData)
        {
                NSLog(@"%@",cellData);
                
                ArtDetailViewController* vc=GET_VIEW_CONTROLLER(kArtDetailViewController);
                vc.from=@"back";
                vc.artID=[cellData objectForKey:@"id"];
                [self.viewDeckController rightViewPushViewControllerOverCenterController:vc];
                
        }
}

-(void)rightNavBarConfiguration{
        
        //Search icon
        UIImageView*searchImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        searchImageView.image=[UIImage imageNamed:@"search_icon.png"];
        
        UIButton*searchButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        searchButton.frame = CGRectMake(0, 0, 30, 30);
        searchButton.layer.cornerRadius=searchButton.frame.size.width/2;
        [searchButton addTarget:self action:@selector(search:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* searchView=[[UIView alloc]initWithFrame:CGRectMake(0, 5, 30, 30)];
        searchView.backgroundColor=[UIColor clearColor];
        [searchView addSubview:searchImageView];
        [searchView addSubview:searchButton];
        
        //User icon
        
        UIImageView* userImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        userImageView.image=[UIImage imageNamed:@"user_icon.png"];
        
        
        UIButton * userButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        userButton.frame = CGRectMake(0, 0, 30, 30);
        userButton.layer.cornerRadius=userButton.frame.size.width/2;
        [userButton addTarget:self action:@selector(user:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* userView=[[UIView alloc]initWithFrame:CGRectMake(30, 5, 30, 30)];
        userView.backgroundColor=[UIColor clearColor];
        [userView addSubview:userImageView];
        [userView addSubview:userButton];
        
        //Card icon
        UIImageView* cardImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        cardImageView.image=[UIImage imageNamed:@"cart_icon.png"];
        
        
        UIButton * cardButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        cardButton.frame = CGRectMake(0, 0, 30, 30);
        cardButton.layer.cornerRadius=cardButton.frame.size.width/2;
        [cardButton addTarget:self action:@selector(card:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* cardView=[[UIView alloc]initWithFrame:CGRectMake(60, 5, 30, 30)];
        cardView.backgroundColor=[UIColor clearColor];
        [cardView addSubview:cardImageView];
        [cardView addSubview:cardButton];
        cardViewGlobal=cardView;
        
        
        //Card icon
        UIImageView* dotImageView=[[UIImageView alloc]initWithFrame:CGRectMake(13, 6, 3, 20)];
        dotImageView.image=[UIImage imageNamed:@"dotted_menu_icon.png"];
        
        
        UIButton * dotButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        dotButton.frame = CGRectMake(0, 0, 30, 30);
        dotButton.layer.cornerRadius=cardButton.frame.size.width/2;
        [dotButton addTarget:self action:@selector(dot:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* dotView=[[UIView alloc]initWithFrame:CGRectMake(90, 5, 30, 30)];
        dotView.backgroundColor=[UIColor clearColor];
        [dotView addSubview:dotImageView];
        [dotView addSubview:dotButton];
        
        
        
        UIView* rightView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 120, 40)];
        rightView.backgroundColor=[UIColor clearColor];
        
        [rightView addSubview:searchView];
        [rightView addSubview:userView];
        [rightView addSubview:cardView];
        [rightView addSubview:dotView];
        
        UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightView];
        
        [rightView alignmentRectInsets];
        
        
        //        UIBarButtonItem *closeBarItem = [[UIBarButtonItem alloc] initWithCustomView:closeButton];
        //
        //        UIBarButtonItem *sortBarItem = [[UIBarButtonItem alloc] initWithCustomView:sortButton];
        
        
        self.navigationItem.rightBarButtonItem = rightBarItem;//@[closeBarItem,sortBarItem];

}

-(NSInteger)getCardCount{
        
        NSArray* arrCard=[dataManager getCardDetails];
        
        return  arrCard ? arrCard.count : 0;
}

-(void)loadCardCount{
        
        [self removeCardCount];
        
        NSInteger count=[self getCardCount];
        
        UIView* cardCountView=[[UIView alloc]initWithFrame:CGRectMake(cardViewGlobal.frame.size.width-15,
                                                                      0,
                                                                      15,
                                                                      15)];
        UILabel* lblcount=[[UILabel alloc]initWithFrame:cardCountView.bounds];
        lblcount.text = [NSString stringWithFormat:@"%lu",count];
        lblcount.textColor = [UIColor whiteColor];
        lblcount.backgroundColor = [UIColor clearColor];
        lblcount.numberOfLines = 0;
        lblcount.textAlignment = NSTextAlignmentCenter;
        lblcount.font=[UIFont fontWithName:FONT_MONTSERRAT_SEMIBOLD size:9];

        [cardCountView addSubview:lblcount];
        
        cardCountView.backgroundColor=[UIColor redColor];
        cardCountView.layer.cornerRadius=cardCountView.frame.size.width/2;
        cardCountView.layer.borderWidth=1.5;
        cardCountView.layer.borderColor=[UIColor whiteColor].CGColor;
        cardCountView.layer.masksToBounds=YES;
        cardCountView.hidden=count ? NO: YES;
        cardCountViewGlobal=cardCountView;
        [cardViewGlobal addSubview:cardCountView];
        
        
        
        
        
}

-(void)removeCardCount{
        
        for (id view in cardViewGlobal.subviews) {
                
                if(![view isKindOfClass:[UIImageView class]] && ![view isKindOfClass:[UIButton class]] )
                        [view removeFromSuperview];
        }
}

#pragma mark -Get Action from right nav buttons

-(IBAction)search:(id)sender{
        
        NSString *urlString = JOIN_STRING(kPrefixUrl, kURL_Artist);
        NSMutableDictionary* data=[NSMutableDictionary dictionary];
        [data setObject:@"artist" forKey:@"page"];
        
        BestSellingArtistsViewController* vc=GET_VIEW_CONTROLLER(kBestSellingArtistsViewController);
        vc.urlString=urlString;
        vc.urlData=[data mutableCopy];
        vc.dataAccesskey=@"Artist";
        vc.titleString=@"Search Your Favorite Artist";
        vc.isSearchArtist=YES;
        vc.from=@"back";
        [self.viewDeckController rightViewPushViewControllerOverCenterController:vc];
        
}

-(IBAction)user:(id)sender{
        
        if([[EAGallery sharedClass]isLogin]){
                if([self.navigationController.visibleViewController isKindOfClass:[DashboardViewController class]]) return;
                
                DashboardViewController*vc=GET_VIEW_CONTROLLER(kDashboardViewController);
                vc.titleString=@"Dashboard";
                
                [self.viewDeckController rightViewPushViewControllerOverCenterController:vc];
                
        }
        else{
                if([self.navigationController.visibleViewController isKindOfClass:[LoginViewController class]]) return;
                
                LoginViewController*vc=GET_VIEW_CONTROLLER(kLoginViewController);
                vc.titleString=@"Login";
                
                [self.viewDeckController rightViewPushViewControllerOverCenterController:vc];
        }
        
}

-(IBAction)card:(id)sender{
        
}

-(IBAction)dot:(id)sender{
        
        UIButton* button=(UIButton*)sender;
        
        [[EAGallery sharedClass]popover:button vc:self];
        
}

#pragma mark -Get Action from More buttons

-(IBAction)moreButton:(id)sender{
        UIButton* button=(UIButton*)sender;
        
        switch (button.tag) {
                case 0:
                        
                        break;
                case 1:
                {
                        ReviewViewController* vc=GET_VIEW_CONTROLLER(kReviewViewController);
                        vc.arrArtistReviews=[arrReview mutableCopy];
                        vc.titleString=[arrHeaderTitle objectAtIndex:button.tag];
                        vc.from=@"back";
                        if(arrReview.count)
                                [Alert performBlockWithInterval:0.30 completion:^{
                                        
                                        [self.viewDeckController rightViewPushViewControllerOverCenterController:vc];
                                }];
                        
                }
                        break;
                case 2:
                {
                        ArtCollectionViewController* vc=GET_VIEW_CONTROLLER(kArtCollectionViewController);
                        vc.arrArtCollectionList=[arrArtList mutableCopy];
                        vc.titleString=[arrHeaderTitle objectAtIndex:button.tag];
                        vc.from=@"back";
                        vc.baseURL=baseURL;
                        if(arrArtList.count)
                                [Alert performBlockWithInterval:0.30 completion:^{
                                        
                                        [self.viewDeckController rightViewPushViewControllerOverCenterController:vc];
                                }];
                }
                        break;
                        
                default:
                        break;
        }
        
}

-(UIImage*)setNavBarImage{
        
        UIImage* result;
        UIImage* image=[Alert imageFromColor:[UIColor blackColor]];
        
        
        if (IS_IPHONE_4){
                
                
                CGRect rect = CGRectMake(0,0,320,44);
                UIImage *img=[Alert imageResize:rect image:image];//[UIImage imageNamed:@"nav_mage.png"]
                result=img;
        }
        else{
                CGRect rect = CGRectMake(0,0,320,88);
                UIImage *img=[Alert imageResize:rect image:image];//[UIImage imageNamed:@"nav_mage.png"]
                result=img;
        }
        
        return result;
        
}


#pragma mark ====: STAR RATING DELEGATE METHOD :====
-(void)starSelectionChanged:(EDStarRatings *)control rating:(float)rating{
//        if( [control isEqual:_starRatings] )
//                ratingString = [NSString stringWithFormat:@"%.1f", rating];
//        else
                NSLog(@"%f",rating);
}

#pragma mark ====: STAR RATING OF USER :====
-(void)starRatingOfUser:(float)rate cell:(ArtistDetailViewCell2*)cell{
        // Setup control using iOS7 tint Color
        cell.viContainerRating.backgroundColor  = [UIColor clearColor];
        cell.viContainerRating.starImage = [[UIImage imageNamed:@"star-unselected.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];
        cell.viContainerRating.starHighlightedImage = [[UIImage imageNamed:@"star-selected.png"] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];
        cell.viContainerRating.maxRating = 5.0;
        cell.viContainerRating.delegate = self;
        cell.viContainerRating.horizontalMargin = 1.0;
        cell.viContainerRating.editable = NO;
        cell.viContainerRating.rating= rate;
        cell.viContainerRating.displayMode=EDStarRatingDisplayHalf;
        [cell.viContainerRating  setNeedsDisplay];
        cell.viContainerRating.tintColor = [UIColor yellowColor];
        //        [self starsSelectionChanged:cell.starRating rating:2.5];
}

#pragma mark -
#pragma mark Delegate implementation of NIB instatiated DLStarRatingControl

-(void)newRating:(DLStarRatingControl *)control :(float)rating {
        NSLog(@"%@",[NSString stringWithFormat:@"%0.1f star rating",rating]);
}

-(void)DLStarRatingOfUser:(float)rate cell:(ArtistDetailViewCell2*)cell{
        DLStarRatingControl *customNumberOfStars = [[DLStarRatingControl alloc] initWithFrame:cell.viContainerRating.frame andStars:5 isFractional:YES];
        customNumberOfStars.delegate = self;
        customNumberOfStars.backgroundColor = [UIColor clearColor];
        customNumberOfStars.autoresizingMask =  UIViewAutoresizingFlexibleLeftMargin | UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleRightMargin | UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleBottomMargin;
        customNumberOfStars.rating = rate;
        [cell.contentView addSubview:customNumberOfStars];
        [cell.contentView insertSubview:customNumberOfStars belowSubview:cell.viContainerRating];
}

#pragma Mark Navigation Bar Configuration Code

-(void)navigationBarConfiguration{
        //    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
        [self.navigationController.navigationBar setBackgroundImage:[self setNavBarImage]
                                                      forBarMetrics:UIBarMetricsDefault];
        UIButton * menuButton  = [UIButton buttonWithType:UIButtonTypeSystem];
        menuButton.frame = CGRectMake(8, 20, 24, 18);
        [menuButton setBackgroundImage:[UIImage imageNamed:MENU_IMAGE] forState:UIControlStateNormal];
        
        //    [menuButton addTarget:self.revealViewController action:@selector(revealToggle:) forControlEvents:UIControlEventTouchUpInside];
        [menuButton addTarget:self.viewDeckController action:@selector(toggleLeftView) forControlEvents:UIControlEventTouchUpInside];
        
        UIBarButtonItem *accountBarItem = [[UIBarButtonItem alloc] initWithCustomView:menuButton];
        
        self.navigationItem.leftBarButtonItem = accountBarItem;
        //[self.navigationController.navigationBar addGestureRecognizer:self.revealViewController.panGestureRecognizer];
}

#pragma mark -Call WebService

-(void)getWebService{
        
        const char* className=[NSStringFromSelector(_cmd) UTF8String];
        
        dispatch_queue_t myQueue = dispatch_queue_create(className,NULL);
        dispatch_async(myQueue, ^{
                
                
                NSString *urlString = JOIN_STRING(kPrefixUrl, kURL_ArtistDetail);
                NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                [dic setObject:self.artUserName forKey:@"artist_name"];//{"artist_name":"deepak"}
                
                
                NSString *postString =[Alert jsonStringWithDictionary:[dic mutableCopy]];
                
                
                NSLog(@" tempURL :%@---",urlString);
                
                NSData *postData = [postString dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];
                // NSString *postLength = [NSString stringWithFormat:@"%lu",(unsigned long)[postData length]];
                
                NSURL *url = [NSURL URLWithString:urlString];
                
                NSMutableURLRequest *theRequest = [NSMutableURLRequest requestWithURL:url];
                [theRequest setHTTPMethod:@"POST"];
                [theRequest setValue:nil forHTTPHeaderField:@"Content-Length"];
                [theRequest setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
//                NSData *req=[NSData dataWithBytes:[postString UTF8String] length:[postString length]];
                [theRequest setHTTPBody:postData];
                NSData *returnData = [NSURLConnection sendSynchronousRequest:theRequest returningResponse:nil error:nil];
                
                if (returnData == nil)
                {
                        dispatch_async(dispatch_get_main_queue(), ^{
                                [self setBackgroundLabel];
//                                [self removeActivityIndicator];
                                
                        });
                }
                else
                {
                        
                        NSDictionary * result =[NSJSONSerialization JSONObjectWithData:returnData
                                                                               options:NSJSONReadingMutableContainers
                                                                                 error:nil];
                        
                        
                        
                        if ([result isKindOfClass:[NSNull class]] ||result == nil)
                        {
                                //[self alerMessage];
                                dispatch_async(dispatch_get_main_queue(), ^{
                                        [self setBackgroundLabel];
                                });
                        }
                        else
                        {
                                
                                NSLog(@"Response : %@", result);
                                NSString *success  = [result valueForKey:@"success"];
                                NSString *error  = [result valueForKey:@"error"];
                                
                                if (success.boolValue) {
                                        
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [self removeActivityIndicator];
                                                
                                        });
                                        
                                        NSArray*resData = (NSArray*)[result valueForKey:@"userid"];
                                        NSArray*resReview = (NSArray*)[result valueForKey:@"review"];
                                        NSArray*resArtList = (NSArray*)[result valueForKey:@"Artlist1"];
                                        NSString*resBaseURL = (NSString*)[result valueForKey:@"base_url"];
                                        
                                        if([resData isKindOfClass:[NSArray class]]){
                                                        data=resData.count ? resData[0] :nil;
                                        }
                                        
                                        if([resReview isKindOfClass:[NSArray class]]){
                                                        arrReview=resReview.count ? [resReview mutableCopy] :nil;
                                                
                                        }
                                        if([resArtList isKindOfClass:[NSArray class]]){
                                                arrArtList=resArtList.count ? [resArtList mutableCopy] :nil;
                                                
                                        }
                                        if([resBaseURL isKindOfClass:[NSString class]]){
                                                baseURL=!IS_EMPTY(resBaseURL) ? [resBaseURL mutableCopy] :nil;
                                                
                                        }
                                        
                                        
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                
                                                [UIView transitionWithView:self.tableView
                                                                  duration:0.3
                                                                   options:UIViewAnimationOptionTransitionCrossDissolve
                                                 
                                                                animations:nil
                                                                completion:nil];

                                                [self.tableView reloadData];
                                        });

                                        
                                }
                                else if (error.boolValue) {
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [self setBackgroundLabel];
                                        });
                                }
                                
                                else{
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                [self setBackgroundLabel];
                                        });
                                }
                                
                                
                        }
                        
                }
                
        });
        
}


#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
        
        return 3;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
        NSInteger rows=0;
        
        switch (section) {
                case 0:
                        rows+= data ? 1 :0;
                        break;
                case 1:
                        rows+= arrReview ? 1 :0;
                        break;
                case 2:
                        rows+= arrArtList ? 1 :0;
                        break;
                        
                default:
                        break;
        }
        
     
        return rows;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
        float finalHeight=0;
        
        
        switch (indexPath.section) {
                case 0:
                        //finalHeight=  172.0f;
                        
                        if(data){
                                //                        ArtDetailViewCell3 *cell =(ArtDetailViewCell3*)[self.tableView cellForRowAtIndexPath:indexPath];
                                
                                float defaultHeight=75.0f,y=8.0f,bottom=60.0f;
                                UILabel* label=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, self.tableView.frame.size.width-16, 20)];
                                label.font=[UIFont fontWithName:@"Dosis-Light" size:11];
                                
                                label.text=[data objectForKey:@"bio"];
                                label.textAlignment=NSTextAlignmentLeft;
                                label.backgroundColor=[UIColor yellowColor];
                                float height=[Alert getLabelHeight:label];
                                
                                finalHeight=MIN(height, defaultHeight);
                                
                                finalHeight+=y+bottom;
                                
                                
                                
                        }
                        else{
                                finalHeight=0;
                        }
                        break;
                case 1:
                        finalHeight= arrReview ?  101.0f : 0;
                        break;
                case 2:
                       
                        /*
                        if(data){
                                //                        ArtDetailViewCell3 *cell =(ArtDetailViewCell3*)[self.tableView cellForRowAtIndexPath:indexPath];
                                
                                float defaultHeight=43;
                                UILabel* label=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, self.tableView.frame.size.width-16, 20)];
                                label.font=[UIFont fontWithName:@"Dosis-Light" size:15];
                                
                                label.text=[data objectForKey:@"art_about"];
                                label.textAlignment=NSTextAlignmentLeft;
                                label.backgroundColor=[UIColor yellowColor];
                                float height=[Alert getLabelHeight:label];
                                
                                if(isShowDesc){
                                        
                                        finalHeight=   height<20 ? defaultHeight+20 : defaultHeight + height +20 ;
                                        finalHeight+=10;
                                }
                                else{
                                        finalHeight= defaultHeight;
                                }
                                
                        }
                        else{
                                finalHeight=0;
                        }
                         */
                        finalHeight= arrArtList ?  180.0f : 0;
                        break;
                default:
                        break;
        }
        
        return finalHeight;
        
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
        
        switch (indexPath.section) {
                case 0:
                        {
                        ArtistDetailViewCell1 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier1 forIndexPath:indexPath];
                        cell.contentView.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
                        
                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                        cell.lblDesc.text=[data objectForKey:@"bio"];
                        
                        //                cell.btnShowDesc.tag=indexPath.row;
                        
                        //                [cell.btnShowDesc addTarget:self action:@selector(showDesc:) forControlEvents:UIControlEventTouchUpInside];
                        cell.lblDesc.translatesAutoresizingMaskIntoConstraints=YES;
                        
                        float height=[Alert getLabelHeight:cell.lblDesc];
                        
                        float defaultHeight=75;
                        
                        float finalHeight=MIN(height, defaultHeight);
                        
                        CGRect frame=cell.lblDesc.frame;
                        frame.size.height=finalHeight;
                        cell.lblDesc.frame=frame;
                        //                cell.lblDesc.backgroundColor=[UIColor yellowColor];
                        
                        
                        //                [UIView transitionWithView:cell.imgShowDesc
                        //                                  duration:0.3
                        //                                   options:UIViewAnimationOptionTransitionCrossDissolve
                        //
                        //                                animations:^{
                        //                                        cell.imgShowDesc.image=[UIImage imageNamed:isShowDesc ? @"minus.png" : @"plus.png"];
                        //                                }
                        //                                completion:nil];
                        
                        [UIView transitionWithView:cell
                                          duration:0.3
                                           options:UIViewAnimationOptionTransitionCrossDissolve
                         
                                        animations:nil
                                        completion:nil];
                        
                        
                        
                        return cell;
                }
                        break;
                case 1:
                        {
                        ArtistDetailViewCell2 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier2 forIndexPath:indexPath];
                        cell.contentView.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                        //                float finalHeight=95.0f;
                        //                cell.contentView.translatesAutoresizingMaskIntoConstraints=YES;
                        //                CGRect frame=cell.contentView.frame;
                        //                frame.size.height=finalHeight;
                        //                cell.contentView.frame=frame;
                        
                        NSDictionary* dic=arrReview.count ? arrReview[0] : nil;
                        
                        cell.lblReview.text=[NSString stringWithFormat:@"\"%@\"",[dic objectForKey:@"review"]];
                        NSString* autherName=[dic objectForKey:@"name"];
                        NSString* reviewDate=[dic objectForKey:@"review_date"];
                        reviewDate=[Alert getDateWithString:reviewDate getFormat:@"yyyy-MM-dd HH:mm:ss" setFormat:@"yyyy-MM-dd"];
                        
                        
                        
                        
                        UIColor* color1=[Alert colorFromHexString:@"#585858"];
                        UIColor* color2=[Alert colorFromHexString:@"#971700"];
                        
                        cell.lblReviewer.text=[NSString stringWithFormat:@"Reviewed by : %@ on %@",autherName,reviewDate];
                        NSInteger l1=autherName.length;
                        NSInteger l2=reviewDate.length;
                        //        NSInteger l3=cell.lblAutherName.text.length;
                        
                        NSMutableAttributedString * string = [[NSMutableAttributedString alloc] initWithString:cell.lblReviewer.text];
                        [string addAttribute:NSForegroundColorAttributeName value:color1 range:NSMakeRange(0,13)];
                        [string addAttribute:NSForegroundColorAttributeName value:color2 range:NSMakeRange(14,l1)];
                        [string addAttribute:NSForegroundColorAttributeName value:color1 range:NSMakeRange(14+l1,l2)];
                        
                        cell.lblReviewer.attributedText = string;
                        
                        float rating=[[dic objectForKey:@"rate"] floatValue];
                                
                                
                        [self DLStarRatingOfUser:rating cell:cell];
                        //[self starRatingOfUser:rating cell:cell];
                        
                        
                        return cell;
                }
                        break;
                case 2:
                        {
                        ArtistDetailCell3 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier3 forIndexPath:indexPath];
                        
                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                
                        NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                        [dic setObject:baseURL forKey:@"base_url"];
                                
                        [cell setCollectionInfo:dic];
                        [cell setCollectionData:[arrArtList mutableCopy]];

                        
                        return cell;
                }
                        break;
                        
                default:
                        break;
        }
        
        return nil;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
        
        [tableView deselectRowAtIndexPath:indexPath animated:NO];
        
        
}

#pragma mark UITableViewDelegate methods

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
//        NSDictionary *sectionData = [arrHeaderTitle objectAtIndex:section];
        NSString *header = [arrHeaderTitle objectAtIndex:section];
        return header;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {

        //Header View
        UIView *headerView = [[UIView alloc] init];
        headerView.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
//        headerView.backgroundColor=[UIColor clearColor];
        
        //Header Title
        UILabel *myLabel = [[UILabel alloc] init];
        myLabel.frame = CGRectMake(8, 8, tableView.frame.size.width-16, 20);
        myLabel.font=[UIFont fontWithName:@"Dosis-Light" size:15];
        myLabel.text = [self tableView:tableView titleForHeaderInSection:section];
        myLabel.textColor=[Alert colorFromHexString:COLOR_CELL_TEXT];
        //myLabel.backgroundColor=[UIColor grayColor];
        [headerView addSubview:myLabel];
        
        //View All button
        UIButton*moreButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        moreButton.tag=section;
        moreButton.frame = CGRectMake(0, 5, 50, 25);
        moreButton.layer.cornerRadius=5.0;
        [moreButton addTarget:self action:@selector(moreButton:) forControlEvents:UIControlEventTouchUpInside];
        [moreButton setTitle:@"View All" forState:UIControlStateNormal];
        [moreButton setTitleColor:[Alert colorFromHexString:COLOR_CELL_TEXT] forState:UIControlStateNormal];
        moreButton.titleLabel.font=[UIFont fontWithName:@"Dosis-Light" size:15];
        
        UIView* moreView=[[UIView alloc]initWithFrame:CGRectMake(tableView.frame.size.width-58, 0, 50, 30)];
        moreView.backgroundColor=[UIColor clearColor];
        [moreView addSubview:moreButton];
        
        
        
        

        
        switch (section) {
                case 0:
                        
                        break;
                case 1:
                       if(arrReview.count>=2)
                                [headerView addSubview:moreView];
                        break;
                case 2:
                        if(arrArtList.count>=2)
                                [headerView addSubview:moreView];
                        break;
                        
                default:
                        break;
        }
        
        return headerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
        NSInteger height=0;
        switch (section) {
                case 0:
                        height= data ? 30 :0;
                        break;
                case 1:
                        height= arrReview ? 30 :0;
                        break;
                case 2:
                        height= arrArtList ? 30 :0;
                        break;
                        
                default:
                        break;
        }


        return height;
}




@end
