//
//  ValuationOfArtViewController.m
//  EastonArtGalleries
//
//  Created by Sandeep Kumar on 01/07/17.
//  Copyright Â© 2017 infoicon. All rights reserved.
//

#import "ValuationOfArtViewController.h"
#import "UpdateProfileViewCell.h"
#import "AddArtViewCell3.h"
#import "AddArtViewCell2.h"
#import "AddArtViewCell1.h"
#import "RegistrationViewCell.h"
#import "PopFilterViewCell.h"

#define COLOR_CELL_BACKGROUND   @"#DEDEDD"
#define COLOR_CELL_TEXT         @"#575656"

#define STEP_1_ICON     @"step1.png"
#define STEP_2_ICON     @"step2.png"
#define STEP_3_ICON     @"step3.png"

#define CELL_CONTENT_LEFT_MARGIN        0
#define CELL_CONTENT_TOP_MARGIN         0

#define CELL_DESC_LEFT_MARGIN           41
#define CELL_DESC_RIGHT_MARGIN          8
#define CELL_DESC_HEIGHT_DEFAULT        80
#define CELL_DESC_TOP_MARGIN            7
#define CELL_CONTENT_BOTTOM_MARGIN      8

#define CELL_PICUTRE_LEFT_MARGIN        0
#define CELL_PICUTRE_HEIGHT_DEFAULT     180




@interface ValuationOfArtViewController ()<UITableViewDelegate,UITableViewDataSource,FPPopoverControllerDelegate,buttontitledelgate,PopupDelegate,UITextFieldDelegate,TTTAttributedLabelDelegate>
{
        DataBaseHandler *dataManager;
        UIView* cardViewGlobal;
        UIView* cardCountViewGlobal;
        int level;
        
        NSMutableArray* arrData1;
        NSMutableArray* arrData2;
        NSMutableArray* arrData3;
        NSMutableArray* arrHeaderTitle1;
        NSMutableArray* arrHeaderTitle2;
        NSMutableArray* arrHeaderTitle3;
        NSMutableArray* arrMultipleArt;
        NSMutableArray* arrCertificates;
        NSMutableArray* arrSelections;
        
        BOOL isUpdateHeight;

}

@property (nonatomic, strong) NSURLSession *session;

@end

@implementation ValuationOfArtViewController

static NSString *CellIdentifier1 = @"Cell1";
static NSString *CellIdentifier2 = @"Cell2";
static NSString *CellIdentifier3 = @"Cell3";
static NSString *CellIdentifier4 = @"Cell4";
static NSString *CellIdentifier5 = @"Cell5";
static NSString *CellIdentifier6 = @"Cell6";
static NSString *CellIdentifier7 = @"Cell7";
static NSString *CellIdentifier8 = @"Cell8";
static NSString *CellIdentifier9 = @"Cell9";
static NSString *CellIdentifier10 = @"Cell10";
static NSString *CellIdentifier11 = @"Cell11";
static NSString *CellIdentifier12 = @"Cell12";


#pragma mark - View controller life cicle

- (void)viewDidLoad {
   
        [super viewDidLoad];
    
        [self cellRegister];
        
        [self loadDataLevel1];
        
        [self loadDataLevel2];

        [self loadDataLevel3];
        
        [self reSetStepIcon];
        
        [self config];
        
        [self setLogoImage];
        
        [self rightNavBarConfiguration];
        
        
        if([self.from isEqualToString:@"back"]) [self setNav];
        else                                    [self navigationBarConfiguration];

}

-(void)viewWillAppear:(BOOL)animated{
        [super viewWillAppear:animated];
        
        [self.viewDeckController setLeftLedge:65];
        
        
        [self loadCardCount];
        
        
}

-(void)viewDidAppear:(BOOL)animated{
        
        [super viewDidAppear:animated];
        
        [self.viewDeckController closeLeftViewAnimated:NO];
        
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Custom Methods

-(void)config{
        
//        level=1;
        dataManager = [[DataBaseHandler alloc] initWithDB:DATABASE_NAME];
        self.lblTitle.text=[self.titleString uppercaseString];// @"ART COLLECTION";
        
        self.tableView.delegate=self;
        self.tableView.dataSource=self;
        
        self.tableView.tableFooterView=[[UIView alloc]init];
//        self.tableView.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
        
        [self.tableView reloadData];
        
        
}

-(void)loadDataLevel1{
        
        level=1;
        //Header
        {
                arrHeaderTitle1=[[NSMutableArray alloc]init];
                
                [arrHeaderTitle1 addObject:@"Elements to determine value of your art, please complete to the best of your knowledge in order to enable us to give you our best-considered opinion.Art works accepted are limited to Fine art,Sculpture and Decorative art."];
                [arrHeaderTitle1 addObject:@"Upload at least 3 HD quality pictures-art front, 3 HD pictures-art back"];
                [arrHeaderTitle1 addObject:@""];
                //                [arrHeaderTitle addObject:@""];
                
                
        }

        //init data
        {
                arrData1=[[NSMutableArray alloc]init];
                
                
                NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                
                [dic setObject:@"First Name"                                    forKey:@"title"];
                [dic setObject:@"Enter your first name"                         forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData1 addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@"Middle Name"                                   forKey:@"title"];
                [dic setObject:@"Enter your middle name"                        forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData1 addObject:dic];
                
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@"Last Name"                                     forKey:@"title"];
                [dic setObject:@"Enter your last name"                          forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData1 addObject:dic];

                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@"Email"                                         forKey:@"title"];
                [dic setObject:@"Enter your email"                              forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"email_icon.png"                                forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData1 addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@"Phone"                                         forKey:@"title"];
                [dic setObject:@"Enter your phone number "                      forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"phone_icon.png"                                forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData1 addObject:dic];
                
        }
        
        
        //Multiple art
        {
                arrMultipleArt=[[NSMutableArray alloc]init];
                
                
                NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                
                [dic setObject:@""                                              forKey:@"path"];
                [dic setObject:[[UIImage alloc] init]                           forKey:@"image"];
                [arrMultipleArt addObject:dic];
        }
        
        
        
}

-(void)loadDataLevel2{
        
//        level=2;
        //Header
        
        {
                arrHeaderTitle2=[[NSMutableArray alloc]init];
                
                [arrHeaderTitle2 addObject:@""];
                [arrHeaderTitle2 addObject:@"Upload art authenticity certificates if any"];
                [arrHeaderTitle2 addObject:@"Upload quality close-up photo of signature if possible"];
                [arrHeaderTitle2 addObject:@""];
                //                [arrHeaderTitle addObject:@""];
                
                
        }
        
        //init data
        {
                arrData2=[[NSMutableArray alloc]init];
                
                
                NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"Artist name if known"                          forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"* Artwork Size"                                  forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"* Artwork Medium"                                forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"Date artwork completed if known"               forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"email_icon.png"                                forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"* Artist bio"                                    forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"phone_icon.png"                                forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"* Artist Critiques"                              forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"phone_icon.png"                                forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"title"];
                [dic setObject:@"Museum purchased art from artist if any"       forKey:@"msg"];
                [dic setObject:@""                                              forKey:@"value"];
                [dic setObject:@"phone_icon.png"                                forKey:@"icon"];
                [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                [arrData2 addObject:dic];
                
        }
        
        
        //Multiple art
        {
                arrCertificates=[[NSMutableArray alloc]init];
                
                
                NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                [dic setObject:@""                                              forKey:@"path"];
                [dic setObject:[[UIImage alloc] init]                           forKey:@"image"];
                [arrCertificates addObject:dic];
                
                [dic setObject:@""                                              forKey:@"path"];
                [dic setObject:[[UIImage alloc] init]                           forKey:@"image"];
                [arrCertificates addObject:dic];

        }

        
        
        [self.tableView reloadData];
}

-(void)loadDataLevel3{
        
//        level=3;
        
        //Header
        
        {
                arrHeaderTitle3=[[NSMutableArray alloc]init];
                
                [arrHeaderTitle3 addObject:@"Art provenance (is the chronology of the ownership, custody or location of art work) if known"];
                [arrHeaderTitle3 addObject:@"Place Art was purchased and price if known"];
                [arrHeaderTitle3 addObject:@"If any Exhibitions, galleries, museum or corporate, related to Art work "];
                [arrHeaderTitle3 addObject:@"Place /city /country art work originated or executed if known"];
                [arrHeaderTitle3 addObject:@"Any additional art work /size /medium sold by artist in Auction if known"];
                [arrHeaderTitle3 addObject:@"Any additional art work /size /medium sold by artist and price it was sold for"];
                [arrHeaderTitle3 addObject:@"Any other related info you want to share"];
                [arrHeaderTitle3 addObject:@""];
                [arrHeaderTitle3 addObject:@""];
                
                
        }
        
        //init data
        {
                arrData3=[[NSMutableArray alloc]init];
                
                
                for (int i=0; i<7; i++) {
                        NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                        [dic setObject:@""                                              forKey:@"title"];
                        [dic setObject:@""                                              forKey:@"msg"];
                        [dic setObject:@""                                              forKey:@"value"];
                        [dic setObject:@"user_icon_black.png"                           forKey:@"icon"];
                        [dic setObject:[Alert colorFromHexString:COLOR_CELL_TEXT]       forKey:@"color"];
                        [arrData3 addObject:dic];
                }
                
        }
        
        //Selection
        {
                arrSelections=[[NSMutableArray alloc]init];
                
                NSMutableDictionary* dic=[NSMutableDictionary dictionary];
                [dic setObject:@"* We may contact you if additional information is required or additional charges may apply based on submitted artwork in cases where extensive research may be required."                                              forKey:@"title"];
                [dic setObject:[NSNumber numberWithBool:NO]     forKey:@"value"];
                [arrSelections addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@"* All information you have submitted is true and correct for the artwork submitted."                                              forKey:@"title"];
                [dic setObject:[NSNumber numberWithBool:NO]     forKey:@"value"];
                [arrSelections addObject:dic];
                
                dic=[NSMutableDictionary dictionary];
                [dic setObject:@"* This appraisal is an Initial opinion based on photographic images and information submitted we would email you within 5-10 business days of our results."                                              forKey:@"title"];
                [dic setObject:[NSNumber numberWithBool:NO]     forKey:@"value"];
                [arrSelections addObject:dic];
                
                
                
                
        }
        
}


-(void)setLogoImage{
        UIImage* logoImage = [UIImage imageNamed:LOGO_IMAGE];
        UIImageView* imgLogo=[[UIImageView alloc] initWithImage:logoImage];
        imgLogo.frame=CGRectMake(0, 0, 49, 44);
        
        UIView* logoView=[[UIView alloc]initWithFrame:imgLogo.frame];
        [logoView addSubview:imgLogo];
        
        self.navigationItem.titleView =logoView;
}

-(void)setNav{
        
        self.navigationController.navigationBar.barTintColor = [UIColor blackColor];
        self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
        [self.navigationController.navigationBar
         setTitleTextAttributes:@{NSForegroundColorAttributeName : [UIColor whiteColor]}];
        self.navigationController.navigationBar.translucent = NO;
}

-(void)rightNavBarConfiguration{
        
        //Search icon
        UIImageView*searchImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        searchImageView.image=[UIImage imageNamed:@"search_icon.png"];
        
        UIButton*searchButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        searchButton.frame = CGRectMake(0, 0, 30, 30);
        searchButton.layer.cornerRadius=searchButton.frame.size.width/2;
        [searchButton addTarget:self action:@selector(search:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* searchView=[[UIView alloc]initWithFrame:CGRectMake(0, 5, 30, 30)];
        searchView.backgroundColor=[UIColor clearColor];
        [searchView addSubview:searchImageView];
        [searchView addSubview:searchButton];
        
        //User icon
        
        UIImageView* userImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        userImageView.image=[UIImage imageNamed:@"user_icon.png"];
        
        
        UIButton * userButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        userButton.frame = CGRectMake(0, 0, 30, 30);
        userButton.layer.cornerRadius=userButton.frame.size.width/2;
        [userButton addTarget:self action:@selector(user:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* userView=[[UIView alloc]initWithFrame:CGRectMake(30, 5, 30, 30)];
        userView.backgroundColor=[UIColor clearColor];
        [userView addSubview:userImageView];
        [userView addSubview:userButton];
        
        //Card icon
        UIImageView* cardImageView=[[UIImageView alloc]initWithFrame:CGRectMake(5, 5, 20, 20)];
        cardImageView.image=[UIImage imageNamed:@"cart_icon.png"];
        
        
        UIButton * cardButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        cardButton.frame = CGRectMake(0, 0, 30, 30);
        cardButton.layer.cornerRadius=cardButton.frame.size.width/2;
        [cardButton addTarget:self action:@selector(card:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* cardView=[[UIView alloc]initWithFrame:CGRectMake(60, 5, 30, 30)];
        cardView.backgroundColor=[UIColor clearColor];
        [cardView addSubview:cardImageView];
        [cardView addSubview:cardButton];
        [cardView insertSubview:cardImageView atIndex:0];
        [cardView insertSubview:cardButton atIndex:2];
        
        cardViewGlobal=cardView;
        
        
        //Card icon
        UIImageView* dotImageView=[[UIImageView alloc]initWithFrame:CGRectMake(13, 6, 3, 20)];
        dotImageView.image=[UIImage imageNamed:@"dotted_menu_icon.png"];
        
        
        UIButton * dotButton  = [ZFRippleButton buttonWithType:UIButtonTypeSystem];
        dotButton.frame = CGRectMake(0, 0, 30, 30);
        dotButton.layer.cornerRadius=cardButton.frame.size.width/2;
        [dotButton addTarget:self action:@selector(dot:) forControlEvents:UIControlEventTouchUpInside];
        
        UIView* dotView=[[UIView alloc]initWithFrame:CGRectMake(90, 5, 30, 30)];
        dotView.backgroundColor=[UIColor clearColor];
        [dotView addSubview:dotImageView];
        [dotView addSubview:dotButton];
        
        
        
        UIView* rightView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 120, 40)];
        rightView.backgroundColor=[UIColor clearColor];
        
        [rightView addSubview:searchView];
        [rightView addSubview:userView];
        [rightView addSubview:cardView];
        [rightView addSubview:dotView];
        
        UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightView];
        
        [rightView alignmentRectInsets];
        
        
        //        UIBarButtonItem *closeBarItem = [[UIBarButtonItem alloc] initWithCustomView:closeButton];
        //
        //        UIBarButtonItem *sortBarItem = [[UIBarButtonItem alloc] initWithCustomView:sortButton];
        
        
        self.navigationItem.rightBarButtonItem = rightBarItem;//@[closeBarItem,sortBarItem];
}

-(void)reSetStepIcon{
        
        self.imgStep.image=[UIImage imageNamed:(level==1 ? STEP_1_ICON : (level==2 ? STEP_2_ICON : STEP_3_ICON))];
}

-(NSInteger)getCardCount{
        
        NSArray* arrCard=[dataManager getCardDetails];
        
        return  arrCard ? arrCard.count : 0;
}

-(void)loadCardCount{
        
        [self removeCardCount];
        
        NSInteger cartCount=[self getCardCount];
        
        UIView* cardCountView=[[UIView alloc]initWithFrame:CGRectMake(cardViewGlobal.frame.size.width-17,
                                                                      2,
                                                                      15,
                                                                      15)];
        UILabel* lblcount=[[UILabel alloc]initWithFrame:cardCountView.bounds];
        lblcount.text = [NSString stringWithFormat:@"%lu",(long)cartCount];
        lblcount.textColor = [UIColor whiteColor];
        lblcount.backgroundColor = [UIColor clearColor];
        lblcount.numberOfLines = 0;
        lblcount.textAlignment = NSTextAlignmentCenter;
        lblcount.font=[UIFont fontWithName:FONT_MONTSERRAT_SEMIBOLD size:9];
        
        [cardCountView addSubview:lblcount];
        
        cardCountView.backgroundColor=[UIColor redColor];
        cardCountView.layer.cornerRadius=cardCountView.frame.size.width/2;
        cardCountView.layer.borderWidth=1.5;
        cardCountView.layer.borderColor=[UIColor whiteColor].CGColor;
        cardCountView.layer.masksToBounds=YES;
        cardCountView.hidden=cartCount ? NO: YES;
        cardCountViewGlobal=cardCountView;
        [cardViewGlobal addSubview:cardCountView];
        [cardViewGlobal insertSubview:cardCountView atIndex:1];
        
        
        //#if SHADOW_ENABLE
        //        [Alert setShadowOnView:cardCountView];
        //
        //#endif
        
        
        
        
        
}

-(void)removeCardCount{
        
        for (id view in cardViewGlobal.subviews) {
                
                if(![view isKindOfClass:[UIImageView class]] && ![view isKindOfClass:[UIButton class]] )
                        [view removeFromSuperview];
        }
}

-(void)cellRegister{
        
        [self.tableView registerClass:[UpdateProfileViewCell class]     forCellReuseIdentifier:CellIdentifier1];
        [self.tableView registerClass:[AddArtViewCell3 class]           forCellReuseIdentifier:CellIdentifier2];
        [self.tableView registerClass:[AddArtViewCell2 class]           forCellReuseIdentifier:CellIdentifier3];
        [self.tableView registerClass:[RegistrationViewCell class]      forCellReuseIdentifier:CellIdentifier4];
        [self.tableView registerClass:[AddArtViewCell1 class]           forCellReuseIdentifier:CellIdentifier5];
        [self.tableView registerClass:[PopFilterViewCell class]         forCellReuseIdentifier:CellIdentifier6];
        
        /*
        
        [self.tableView registerClass:[UpdateProfileViewCell2 class]    forCellReuseIdentifier:CellIdentifier6];
        [self.tableView registerClass:[UpdateProfileViewCell3 class]    forCellReuseIdentifier:CellIdentifier8];
        [self.tableView registerClass:[AddArtViewCell4 class]           forCellReuseIdentifier:CellIdentifier10];
        [self.tableView registerClass:[ArtDetailCell4 class]            forCellReuseIdentifier:CellIdentifier11];
        [self.tableView registerClass:[AddArtTableViewCell class]       forCellReuseIdentifier:CellIdentifier12];
        
        */
        UINib *contantsCellNib1 = [UINib nibWithNibName:NSStringFromClass([UpdateProfileViewCell class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib1 forCellReuseIdentifier:CellIdentifier1];
        UINib *contantsCellNib2= [UINib nibWithNibName:NSStringFromClass([AddArtViewCell3 class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib2 forCellReuseIdentifier:CellIdentifier2];
        UINib *contantsCellNib3= [UINib nibWithNibName:NSStringFromClass([AddArtViewCell2 class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib3 forCellReuseIdentifier:CellIdentifier3];
        UINib *contantsCellNib4 = [UINib nibWithNibName:NSStringFromClass([RegistrationViewCell class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib4 forCellReuseIdentifier:CellIdentifier4];
        UINib *contantsCellNib5 = [UINib nibWithNibName:NSStringFromClass([AddArtViewCell1 class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib5 forCellReuseIdentifier:CellIdentifier5];
        UINib *contantsCellNib7 = [UINib nibWithNibName:NSStringFromClass([PopFilterViewCell class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib7 forCellReuseIdentifier:CellIdentifier6];
        /*
        UINib *contantsCellNib5= [UINib nibWithNibName:@"UpdateProfileViewCell4" bundle:nil];
        [self.tableView registerNib:contantsCellNib5 forCellReuseIdentifier:CellIdentifier5];
        UINib *contantsCellNib6 = [UINib nibWithNibName:@"UpdateProfileViewCell2" bundle:nil];
        [self.tableView registerNib:contantsCellNib6 forCellReuseIdentifier:CellIdentifier6];
        UINib *contantsCellNib8 = [UINib nibWithNibName:@"UpdateProfileViewCell3" bundle:nil];
        [self.tableView registerNib:contantsCellNib8 forCellReuseIdentifier:CellIdentifier8];
        UINib *contantsCellNib10= [UINib nibWithNibName:@"AddArtViewCell4" bundle:nil];
        [self.tableView registerNib:contantsCellNib10 forCellReuseIdentifier:CellIdentifier10];
        UINib *contantsCellNib12= [UINib nibWithNibName:NSStringFromClass([AddArtTableViewCell class]) bundle:nil];
        [self.tableView registerNib:contantsCellNib12 forCellReuseIdentifier:CellIdentifier12];
        */
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(didSelectItemRemoveFromCollectionView:) name:@"didSelectItemRemoveFromCollectionView" object:nil];
}

-(UIImage*)setNavBarImage{
        
        UIImage* result;
        UIImage* image=[Alert imageFromColor:[UIColor blackColor]];
        
        
        if (IS_IPHONE_4){
                
                
                CGRect rect = CGRectMake(0,0,320,44);
                UIImage *img=[Alert imageResize:rect image:image];//[UIImage imageNamed:@"nav_mage.png"]
                result=img;
        }
        else{
                CGRect rect = CGRectMake(0,0,320,88);
                UIImage *img=[Alert imageResize:rect image:image];//[UIImage imageNamed:@"nav_mage.png"]
                result=img;
        }
        
        return result;
        
}

#pragma Mark Navigation Bar Configuration Code

-(void)navigationBarConfiguration{
        //    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent];
        [self.navigationController.navigationBar setBackgroundImage:[self setNavBarImage]
                                                      forBarMetrics:UIBarMetricsDefault];
        UIButton * menuButton  = [UIButton buttonWithType:UIButtonTypeSystem];
        menuButton.frame = CGRectMake(8, 20, 24, 18);
        [menuButton setBackgroundImage:[UIImage imageNamed:MENU_IMAGE] forState:UIControlStateNormal];
        
        //    [menuButton addTarget:self.revealViewController action:@selector(revealToggle:) forControlEvents:UIControlEventTouchUpInside];
        [menuButton addTarget:self.viewDeckController action:@selector(toggleLeftView) forControlEvents:UIControlEventTouchUpInside];
        
        UIBarButtonItem *accountBarItem = [[UIBarButtonItem alloc] initWithCustomView:menuButton];
        
        self.navigationItem.leftBarButtonItem = accountBarItem;
        //[self.navigationController.navigationBar addGestureRecognizer:self.revealViewController.panGestureRecognizer];
}

#pragma mark -Get Action from right nav buttons

-(IBAction)search:(id)sender{
        
        NSString *urlString = JOIN_STRING(kPrefixUrl, kURL_Artist);
        NSMutableDictionary* data=[NSMutableDictionary dictionary];
        [data setObject:@"artist" forKey:@"page"];
        
        BestSellingArtistsViewController* vc=GET_VIEW_CONTROLLER(kBestSellingArtistsViewController);
        vc.urlString=urlString;
        vc.urlData=[data mutableCopy];
        vc.dataAccesskey=@"Artist";
        vc.titleString=@"Search Your Favorite Artist";
        vc.isSearchArtist=YES;
        vc.from=@"back";
        MOVE_VIEW_CONTROLLER_VIEW_DECK(vc);
        
}

-(IBAction)user:(id)sender{
        
        if([[EAGallery sharedClass]isLogin]){
                if([self.navigationController.visibleViewController isKindOfClass:[DashboardViewController class]]) return;
                
                DashboardViewController*vc=GET_VIEW_CONTROLLER(kDashboardViewController);
                vc.titleString=@"Dashboard";
                
                MOVE_VIEW_CONTROLLER_VIEW_DECK(vc);
                
        }
        else{
                if([self.navigationController.visibleViewController isKindOfClass:[LoginViewController class]]) return;
                
                LoginViewController*vc=GET_VIEW_CONTROLLER(kLoginViewController);
                vc.titleString=@"Login";
                
                MOVE_VIEW_CONTROLLER_VIEW_DECK(vc);
        }
        
        
}

-(IBAction)card:(id)sender{
        
        if([self.navigationController.visibleViewController isKindOfClass:[CardDetailViewController class]]) return;
        
        CardDetailViewController*vc=GET_VIEW_CONTROLLER(kCardDetailViewController);
        vc.titleString=@"Your Cart";
        vc.from=@"back";
        MOVE_VIEW_CONTROLLER_VIEW_DECK(vc);
        
}

-(IBAction)dot:(id)sender{
        
        [[EAGallery sharedClass]popover:sender vc:self];
        
}

#pragma mark -Call WebService

-(void)valuationOfArtWebService:(NSDictionary*)dic images:(NSArray*)images{
        
        const char* className=[NSStringFromSelector(_cmd) UTF8String];
        
        dispatch_queue_t myQueue = dispatch_queue_create(className,NULL);
        dispatch_async(myQueue, ^{
                
                
                NSString *urlString = JOIN_STRING(kPrefixUrl,kURL_VALUATION_OF_ART);
                
                NSString *postString =[Alert jsonStringWithDictionary:[dic mutableCopy]];
                
                //                if(images.count)
                //                        postString=[@"data=" stringByAppendingString:postString];
                
                
                NSLog(@" tempURL :%@---",urlString);
                
                /*
                 NSMutableURLRequest *theRequest =[Alert getRequesteWithPostString:postString
                 urlString:urlString
                 methodType:REQUEST_METHOD_TYPE_POST
                 images:images];
                 dispatch_async(dispatch_get_main_queue(), ^{
                 [[SharedClass sharedObject] addProgressHud:self.navigationController.view];
                 
                 });
                 
                 NSData *returnData = [NSURLConnection sendSynchronousRequest:theRequest returningResponse:nil error:nil];
                 
                 if (returnData == nil)
                 {
                 dispatch_async(dispatch_get_main_queue(), ^{
                 [[SharedClass sharedObject] hudeHide];
                 [Alert alertWithMessage:@"Something went wrong ! Please try later."
                 navigation:self.navigationController
                 gotoBack:NO animation:YES second:3.0];
                 
                 });
                 }
                 else
                 {
                 
                 NSDictionary * result =[NSJSONSerialization JSONObjectWithData:returnData
                 options:NSJSONReadingMutableContainers
                 error:nil];
                 
                 dispatch_async(dispatch_get_main_queue(), ^{
                 [[SharedClass sharedObject] hudeHide];
                 
                 });
                 
                 if ([result isKindOfClass:[NSNull class]] ||result == nil)
                 {
                 dispatch_async(dispatch_get_main_queue(), ^{
                 [Alert alertWithMessage:@"Something went wrong ! Please try later."
                 navigation:self.navigationController
                 gotoBack:NO animation:YES second:3.0];
                 
                 });
                 
                 }
                 else
                 {
                 
                 NSLog(@"Response : %@", result);
                 NSString *success  = [result valueForKey:@"success"];
                 NSString *error  = [result valueForKey:@"error"];
                 
                 if (success.boolValue) {
                 
                 dispatch_async(dispatch_get_main_queue(), ^{
                 
                 
                 [Alert alertWithMessage:[result objectForKey:@"msg"]
                 navigation:self.navigationController
                 gotoBack:NO animation:YES second:3.0];
                 
                 selectedImage=nil;
                 
                 [self loadDataLevel1];
                 [self loadDataLevel2];
                 [self reSetStepIcon];
                 });
                 
                 }
                 else if (error.boolValue) {
                 
                 }
                 
                 else{
                 }
                 
                 
                 }
                 
                 }
                 
                 */
                
                
                NSMutableURLRequest *theRequest =[Alert getOnlyRequesteWithUrlString:postString
                                                                           urlString:urlString
                                                                          methodType:REQUEST_METHOD_TYPE_POST
                                                                              images:images];
                NSMutableData* httpBody=[Alert getBodyForMultipartDataWithPostString:postString images:images];
                
                self.session = [NSURLSession sharedSession];  // use sharedSession or create your own
                
                dispatch_async(dispatch_get_main_queue(), ^{
                        [[SharedClass sharedObject] addProgressHud:self.navigationController.view];
                        
                });
                
                NSURLSessionTask *task = [self.session uploadTaskWithRequest:theRequest fromData:httpBody completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                        
                        NSDictionary * result =[NSJSONSerialization JSONObjectWithData:data
                                                                               options:NSJSONReadingMutableContainers
                                                                                 error:nil];
                        
                        dispatch_async(dispatch_get_main_queue(), ^{
                                [[SharedClass sharedObject] hudeHide];
                                
                        });
                        
                        if ([result isKindOfClass:[NSNull class]] ||result == nil  || error)
                        {
                                dispatch_async(dispatch_get_main_queue(), ^{
                                        [Alert alertWithMessage:@"Something went wrong ! Please try later."
                                                     navigation:self.navigationController
                                                       gotoBack:NO animation:YES second:3.0];
                                        
                                });
                                
                        }
                        else
                        {
                                
                                NSLog(@"Response : %@", result);
                                NSString *success  = [result valueForKey:@"success"];
                                NSString *error  = [result valueForKey:@"error"];
                                
                                if (success.boolValue) {
                                        
                                        dispatch_async(dispatch_get_main_queue(), ^{
                                                
                                                
                                                [Alert alertWithMessage:[result objectForKey:@"msg"]
                                                             navigation:self.navigationController
                                                               gotoBack:YES animation:YES second:3.0];
                                                
                                                [self loadDataLevel1];
                                                [self loadDataLevel2];
                                                [self loadDataLevel3];
                                                [self reSetStepIcon];
                                        });
                                        
                                }
                                else if (error.boolValue) {
                                        
                                }
                                
                                else{
                                }
                                
                                
                        }
                        
                }];
                [task resume];
                
                
                
        });
        
}

#pragma mark - Calculate Custom Cell height

-(CGRect)getSizeFromText:(NSString*)text tableView:(UITableView*)tableView fontSize:(float)fontSize{
        
        text=IS_EMPTY(text) ? @"" : text;
        UIFont*font=[UIFont fontWithName:FONT_MONTSERRAT_SEMIBOLD size:fontSize];
        
        NSAttributedString *attributedString = [[NSAttributedString alloc] initWithString : text
                                                                               attributes : @{
                                                                                              NSFontAttributeName : font
                                                                                              }];
        
        //its not possible to get the cell label width since this method is called before cellForRow so best we can do
        //is get the table width and subtract the default extra space on either side of the label.
        CGSize constraintSize = CGSizeMake(tableView.frame.size.width - CELL_CONTENT_LEFT_MARGIN*2-CELL_DESC_LEFT_MARGIN-CELL_DESC_RIGHT_MARGIN, MAXFLOAT);
        
        CGRect rect = [attributedString boundingRectWithSize:constraintSize options:(NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeading) context:nil];
        
        
        return IS_EMPTY(text) ? CGRectZero : rect;
}

-(CGFloat)calculateCellHightWithIndexPath:(NSIndexPath*)indexPath tableView:(UITableView*)tableView{
        
        int height=0;
        
        
                
                
        NSDictionary *item = [[arrSelections objectAtIndex:indexPath.row] copy];
        NSString* text1=@"";

        NSString* title=[item objectForKey:@"title"];
        text1=IS_EMPTY(title) ? @"" : title;


        CGRect rect = [self getSizeFromText:text1 tableView:tableView fontSize:13];
        rect.size.height=MIN(rect.size.height, CELL_DESC_HEIGHT_DEFAULT);                
        float totalHeight=rect.size.height;

        //Add back in the extra padding above and below label on table cell.
        totalHeight = totalHeight +
        CELL_CONTENT_TOP_MARGIN+
        CELL_DESC_TOP_MARGIN+
        CELL_CONTENT_BOTTOM_MARGIN;
        
        height=totalHeight;
        //if height is smaller than a normal row set it to the normal cell height, otherwise return the bigger dynamic height.
//                height=rect.size.height;
                
        
        
        
        return height;
        
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
        
        NSInteger section=0;
        switch (level) {
                case 1:
                        section=3;
                        break;
                case 2:
                        section=4;
                        break;
                case 3:
                        section=9;
                        break;
                default:
                        break;
        }
        return section;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
        
        
        
        NSInteger rows=0;
        switch (level) {
                case 1:
                        switch (section) {
                                case 0:
                                        rows=5;
                                        break;
                                case 1:
                                        rows=arrMultipleArt.count;
                                        break;
                                case 2:
                                        rows=1;
                                        break;
                                default:
                                        break;
                        }
                        break;
                        
                case 2:
                        switch (section) {
                                case 0:
                                        rows=7;
                                        break;
                                case 1:
                                case 2:
                                case 3:
                                        rows=1;
                                        break;
                                        
                                default:
                                        break;
                        }
                        break;
                        
                case 3:
                        switch (section) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                        rows=1;
                                        break;
                                case 7:
                                        rows=3;
                                        break;
                                case 8:
                                        rows=1;
                                        break;
                                        /*
                                case 2:
                                        rows=3;
                                
                                        break;
                                case 3:
                                        rows=1;
                                        break;
                                case 4:
                                        rows=1;
                                        break;
                                        */
                                default:
                                        break;
                        }
                        break;
                        
                default:
                        break;
        }
        return rows;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
        
        NSInteger height=0;
        switch (level) {
                case 1:
                        switch (indexPath.section) {
                                case 0:
                                        height=44.0f;
                                        break;
                                case 1:
                                        height=40;
                                        break;
                                case 2:
                                        height=44.0f;
                                        break;
                                        
                                default:
                                        break;
                        }
                        break;
                        
                case 2:
                        switch (indexPath.section) {
                                case 0:
                                        height=44.0f;
                                        break;
                                case 1:
                                case 2:
                                        height=40.0f;
                                        break;
                                        
                                case 3:
                                        height=44.0f;
                                        break;
                                        
                                default:
                                        break;
                        }
                        break;
                    
                case 3:
                        switch (indexPath.section) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:

                                        height=44.0f;
                                        break;
                                case 7:
                                        height=[self calculateCellHightWithIndexPath:indexPath tableView:tableView];
                                        break;
                                case 8:
                                        height=44.0f;
                                        break;
                                        /*
                                case 1:
                                        height=88.0f;
                                        break;
                                case 2:
                                        height=88.0f;
                                        break;
                                        
                                case 3:
                                        height=40;
                                        break;
                                case 4:
                                        height=40;
                                        break;
                                case 5:
                                        height=isAvailableForBid ? 44.0f : 0;
                                        break;
                                case 6:
                                        height=44.0f;
                                        break;
                                        */
                                default:
                                        break;
                        }
                        
                        break;
                default:
                        break;
        }
        return height;
        
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
        
        switch (level) {
                case 1:
                        switch (indexPath.section) {
                                case 0:
                                        switch (indexPath.row) {
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                case 4:
                                                {
                                                        NSDictionary *item = [arrData1 objectAtIndex:indexPath.row];
                                                        
                                                        UpdateProfileViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier1 forIndexPath:indexPath];
                                                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                                        cell.contentView.backgroundColor=[UIColor whiteColor];
                                                        
                                                        cell.img.hidden=NO;
                                                        cell.lblTitle.text=[item objectForKey:@"title"];
                                                        cell.lblTitle.tintColor=[UIColor blackColor];
                                                        
                                                        cell.img.image=[UIImage imageNamed:[item objectForKey:@"icon"]];
                                                        
                                                        cell.txtName.font=[UIFont fontWithName:FONT_DOSIS_REGULAR size:11];
                                                        cell.txtName.text=[item objectForKey:@"value"];
                                                        cell.txtName.delegate=self;
                                                        [Alert attributedString:cell.txtName
                                                                            msg:[item objectForKey:@"msg"]
                                                                          color:[item objectForKey:@"color"]];
                                                        cell.txtName.tag=indexPath.row;
                                                        cell.txtName.autocorrectionType=UITextAutocorrectionTypeNo;
                                                        
                                                        //                                cell.txtName.keyboardType=indexPath.row==0 ? UIKeyboardTypeDefault : UIKeyboardTypeDecimalPad;
                                                        [cell.txtName addTarget:self
                                                                         action:@selector(textFieldDidChange:)
                                                               forControlEvents:UIControlEventEditingChanged];
                                                        cell.txtName.tintColor=[UIColor blackColor];
                                                        
                                                        cell.backgroundColor=[Alert colorFromHexString:COLOR_CELL_BACKGROUND];
                                                        if(indexPath.row!=1 && indexPath.row!=2 && indexPath.row!=4){
                                                                //Add ' * '
                                                                NSString* text=[item objectForKey:@"title"];
                                                                NSString* readMore=@" *";
                                                                text=[text stringByAppendingString:readMore];
                                                                cell.lblTitle.text=text;
                                                                
                                                                cell.lblTitle.delegate=self;
                                                                NSURL *url = [NSURL URLWithString:@"action://Expand"];
                                                                cell.lblTitle.linkAttributes = @{(id)kCTForegroundColorAttributeName: [UIColor redColor],
                                                                                                 NSUnderlineStyleAttributeName: @(NSUnderlineStyleNone)};
                                                                
                                                                NSRange r = [cell.lblTitle.text rangeOfString:readMore];
                                                                [cell.lblTitle addLinkToURL:url withRange:r];
                                                        }
                                                        
                                                        return cell;
                                                        
                                                }
                                                        break;
                                                        
                                                        break;
                                                default:
                                                        break;
                                        }
                                        break;
                                case 1:
                                        {
                                                AddArtViewCell3 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier2 forIndexPath:indexPath];
                                                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                                cell.contentView.backgroundColor=[UIColor whiteColor];
                                                NSDictionary* dic=[arrMultipleArt objectAtIndex:indexPath.row];
                                                
                                                NSString* path=[dic objectForKey:@"path"];
                                                cell.btnAddMore.enabled=YES;
                                                cell.lblFileName.text=IS_EMPTY(path) ? @"No file Chosen" : path;
                                                cell.lblAddMore.text=(indexPath.row==0) ? @"ADD MORE" : @"REMOVE";
                                                
                                                cell.btnChooseFile.tag=indexPath.row;
                                                cell.btnAddMore.tag=indexPath.row;
                                                [cell.btnChooseFile addTarget:self action:@selector(chooseFile:) forControlEvents:UIControlEventTouchUpInside];
                                                [cell.btnAddMore addTarget:self action:@selector(addMore:) forControlEvents:UIControlEventTouchUpInside];
                                                return cell;
                                        }
                                        break;
                                case 2:
                                        {
                                        AddArtViewCell2 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier3 forIndexPath:indexPath];
                                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                        cell.contentView.backgroundColor=[UIColor whiteColor];
                                        cell.lblTitle.text=@"NEXT";
                                        cell.btnClick.tag=indexPath.row;
                                        [cell.btnClick addTarget:self action:@selector(next:) forControlEvents:UIControlEventTouchUpInside];
                                        return cell;
                                }
                                        break;
                                        
                                default:
                                        break;
                        }
                        
                        break;
                   
                case 2:
                        switch (indexPath.section) {
                                        
                                case 0:
                                        {
                                        NSDictionary *item = [arrData2 objectAtIndex:indexPath.row];
                                        
                                        RegistrationViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier4 forIndexPath:indexPath];
                                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                        
                                        cell.txtName.font=[UIFont fontWithName:FONT_DOSIS_REGULAR size:11];
                                        cell.txtName.text=[item objectForKey:@"value"];
                                        cell.txtName.delegate=self;
                                        cell.img.hidden=YES;
                                        cell.img.image=[UIImage imageNamed:[item objectForKey:@"icon"]];
                                        //cell.txtName.textColor=[Alert colorFromHexString:COLOR_CELL_TEXT];
                                        
                                        
                                        [Alert attributedString:cell.txtName
                                                            msg:[item objectForKey:@"msg"]
                                                          color:[item objectForKey:@"color"]];
                                        
                                        cell.txtName.tag=indexPath.row;
                                        [cell.txtName addTarget:self
                                                         action:@selector(textFieldDidChange:)
                                               forControlEvents:UIControlEventEditingChanged];
                                        
                                        // cell.viContainerText.layer.borderWidth=1.5f;
                                        // cell.viContainerText.layer.borderColor=[Alert colorFromHexString:COLOR_CELL_CONTENT_BORRDER].CGColor;
                                        
                                        //Tint color
                                        cell.txtName.tintColor=[UIColor blackColor];
                                        cell.viContainerText.backgroundColor=[UIColor whiteColor];
                                        cell.contentView.backgroundColor=[UIColor whiteColor];
                                        return cell;
                                        
                                }
                                        break;
                                case 1:
                                case 2:
                                        {
                                                AddArtViewCell3 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier2 forIndexPath:indexPath];
                                                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                                cell.contentView.backgroundColor=[UIColor whiteColor];
                                                NSDictionary* dic=[arrCertificates objectAtIndex:indexPath.section==1 ? 0 : 1 ];
                                                
                                                NSString* path=[dic objectForKey:@"path"];
                                                
                                                cell.lblFileName.text=IS_EMPTY(path) ? @"No file Chosen" : path;
//                                                cell.lblAddMore.text=(indexPath.row==0) ? @"ADD MORE" : @"REMOVE";
                                                cell.lblAddMore.text=@"BROWSE";
                                                cell.btnChooseFile.tag=indexPath.row;
                                                cell.btnAddMore.tag=indexPath.row;
                                                [cell.btnChooseFile addTarget:self action:@selector(chooseFile:) forControlEvents:UIControlEventTouchUpInside];
                                                cell.btnAddMore.enabled=NO;
                                               // [cell.btnAddMore addTarget:self action:@selector(addMore:) forControlEvents:UIControlEventTouchUpInside];
                                                return cell;
                                        }
                                        break;
                                        
                                case 3:
                                        {
                                                AddArtViewCell1 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier5 forIndexPath:indexPath];
                                                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                                cell.contentView.backgroundColor=[UIColor whiteColor];
                                                cell.lblLeft.text=@"BACK";
                                                cell.lblRight.text=@"NEXT";
                                                cell.btnLeft.tag=indexPath.row;
                                                cell.btnRight.tag=indexPath.row;
                                                [cell.btnLeft addTarget:self action:@selector(backMove:) forControlEvents:UIControlEventTouchUpInside];
                                                [cell.btnRight addTarget:self action:@selector(next:) forControlEvents:UIControlEventTouchUpInside];
                                                return cell;
                                        }
                                        break;
                                        
                                default:
                                        break;
                        }
                        break;
                 
                case 3:
                        switch (indexPath.section) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                {
                                        NSDictionary *item = [arrData3 objectAtIndex:indexPath.section];
                                        
                                        RegistrationViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier4 forIndexPath:indexPath];
                                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                        
                                        cell.txtName.font=[UIFont fontWithName:FONT_DOSIS_REGULAR size:11];
                                        cell.txtName.text=[item objectForKey:@"value"];
                                        cell.txtName.delegate=self;
                                        cell.img.hidden=YES;
                                        cell.img.image=[UIImage imageNamed:[item objectForKey:@"icon"]];
                                        //cell.txtName.textColor=[Alert colorFromHexString:COLOR_CELL_TEXT];
                                        
                                        
                                        [Alert attributedString:cell.txtName
                                                            msg:@""
                                                          color:[item objectForKey:@"color"]];
                                        
                                        cell.txtName.tag=indexPath.section;
                                        [cell.txtName addTarget:self
                                                         action:@selector(textFieldDidChange:)
                                               forControlEvents:UIControlEventEditingChanged];
                                        
                                        // cell.viContainerText.layer.borderWidth=1.5f;
                                        // cell.viContainerText.layer.borderColor=[Alert colorFromHexString:COLOR_CELL_CONTENT_BORRDER].CGColor;
                                        cell.txtName.autocorrectionType=UITextAutocorrectionTypeNo;
                                        //Tint color
                                        cell.txtName.tintColor=[UIColor blackColor];
                                        cell.viContainerText.backgroundColor=[UIColor whiteColor];
                                        cell.contentView.backgroundColor=[UIColor whiteColor];
                                        return cell;
                                        
                                }
                                        break;
                                case 7:
                                {
                                        PopFilterViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier6 forIndexPath:indexPath];
                                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                        cell.contentView.backgroundColor=[UIColor whiteColor];
                                        
                                        NSDictionary* dic=[arrSelections objectAtIndex:indexPath.row];
                                        
                                        NSNumber* isSelected=[dic objectForKey:@"value"];
                                        
                                        NSString* icon=[isSelected boolValue] ? SELECT_TICK : UNSELECT_TICK;
                                        cell.img.image=[UIImage imageNamed:icon];
                                        
                                        NSString* name=[dic objectForKey:@"title"];
                                        
                                        CGRect rect = [self getSizeFromText:name tableView:tableView fontSize:15];
                                        rect.size.height=MIN(rect.size.height, CELL_DESC_HEIGHT_DEFAULT);
                                        float totalHeight=rect.size.height;
                                        
                                        [Alert updateConstraintsWithView:cell.lblName
                                                                constant:totalHeight ? totalHeight : 0
                                                          constraintType:(NSLayoutAttributeHeight)];
                                        
                                        
                                        cell.lblName.text=name;
                                        cell.lblName.font=[UIFont fontWithName:FONT_DOSIS_REGULAR size:13];
                                        
                                        
                                        return cell;
                                        
                                }
                                        break;
                                case 8:
                                {
                                        AddArtViewCell1 *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier5 forIndexPath:indexPath];
                                        cell.selectionStyle = UITableViewCellSelectionStyleNone;
                                        cell.contentView.backgroundColor=[UIColor whiteColor];
                                        cell.lblLeft.text=@"BACK";
                                        cell.lblRight.text=@"SUBMIT";
                                        cell.btnLeft.tag=indexPath.row;
                                        cell.btnRight.tag=indexPath.row;
                                        [cell.btnLeft addTarget:self action:@selector(backMove:) forControlEvents:UIControlEventTouchUpInside];
                                        [cell.btnRight addTarget:self action:@selector(next:) forControlEvents:UIControlEventTouchUpInside];
                                        return cell;
                                }
                                        break;
                                        
                                default:
                                        break;
                        }
                        break;
                     
                default:
                        break;
        }
        
       
        return nil;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
        
        [tableView deselectRowAtIndexPath:indexPath animated:YES];
        
        switch (level) {
                        
                case 3:
                {
                
                        switch (indexPath.section) {
                                case 7:
                                        switch (indexPath.row) {
                                                case 0:
                                                case 1:
                                                case 2:
                                                {
                                                        NSDictionary* dic=[arrSelections objectAtIndex:indexPath.row];
                                                        
                                                        NSNumber* isSelected=[dic objectForKey:@"value"];
                                                        [dic setValue:[NSNumber numberWithBool:![isSelected boolValue]] forKey:@"value"];
                                                        
                                                        
                                                        [Alert reloadSection:indexPath.section table:tableView];
                                                        
                                                        
                                                }
                                                        
                                                        
                                                        break;
                                                        
                                                default:
                                                        break;
                                        }
                                        break;
                                        
                                default:
                                        break;
                        }
                }
                        break;
                
                default:
                        break;
        }
        
}


#pragma mark UITableViewDelegate methods

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section{
        NSString *header  = @"";
        
        switch (level) {
                case 1:
                        header=[arrHeaderTitle1 objectAtIndex:section];
                        break;
                    
                case 2:
                        header=[arrHeaderTitle2 objectAtIndex:section];
                        break;
                        
                case 3:
                        header=[arrHeaderTitle3 objectAtIndex:section];
                        break;
                     
                default:
                        break;
        }
        return header;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
        
        //Header View
        UIView *headerView = [[UIView alloc] init];
        headerView.backgroundColor=[UIColor whiteColor];
        
        //Header Title
        UILabel *myLabel = [[UILabel alloc] init];
        
        myLabel.font=[UIFont fontWithName:FONT_DOSIS_REGULAR size:13];
        myLabel.text = [self tableView:tableView titleForHeaderInSection:section];
        myLabel.textAlignment=NSTextAlignmentCenter;
        myLabel.textColor=[UIColor blackColor];
        myLabel.backgroundColor=[UIColor clearColor];
        myLabel.numberOfLines=10;
        [headerView addSubview:myLabel];
        
        float height=0;
        switch (level) {
                case 1:
                        switch (section) {
                                case 0:
                                        height=84;
                                        break;
                                case 1:
                                        height=34;
                                        break;
                                default:
                                        break;
                        }
                        break;
                case 2:
                        switch (section) {
                                case 1:
                                case 2:
                                case 3:
                                        height=34;
                                        break;
                                default:
                                        break;
                        }
                        break;
                case 3:
                        switch (section) {
                                        
                                case 0:
                                        height=34;
                                        break;
                                case 1:
                                        height=24;
                                        break;
                                case 2:
                                        height=34;
                                        break;
                                case 3:
                                        height=24;
                                        break;
                                case 4:
                                        height=34;
                                        break;
                                case 5:
                                        height=34;
                                        break;
                                case 6:
                                        height=24;
                                        break;
                                case 7:
                                        height=24;
                                        break;
                                case 8:
                                        height=24;
                                        break;

                                default:
                                        break;
                        }
                        break;
                        
                default:
                        break;
        }
        myLabel.frame = CGRectMake(8, 8, tableView.frame.size.width-16, height);
        
        /*
        if(level==2){
                NSInteger l1=myLabel.text.length;
                NSString* text2=@" *";
                myLabel.text=[myLabel.text stringByAppendingString:text2];
                NSInteger l2=text2.length;
                
                UIFont *font = [UIFont fontWithName:FONT_DOSIS_REGULAR size:15];
                NSDictionary *fontDic = [NSDictionary dictionaryWithObject: font forKey:NSFontAttributeName];
                NSMutableAttributedString * string = [[NSMutableAttributedString alloc] initWithString:myLabel.text attributes:fontDic];
                
                [string addAttribute:NSForegroundColorAttributeName value:myLabel.textColor range:NSMakeRange(0,l1)];
                [string addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(l1,l2)];
                myLabel.attributedText = string;
        }
        
        if(level==3 && section==5){
                UIView* viTick=[[UIView alloc]initWithFrame:CGRectMake(8, 6, 18, 18)];
                viTick.backgroundColor=[UIColor clearColor];
                
                UIImageView* img=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 18, 18)];
                img.image=[UIImage imageNamed:isAvailableForBid ? SELECT_TICK : UNSELECT_TICK];
                
                
                UIButton* btnSelectTick=[[UIButton alloc]initWithFrame:CGRectMake(0, 0, 18, 18)];
                btnSelectTick.tag=section;
                [btnSelectTick addTarget:self action:@selector(availableForBid:) forControlEvents:UIControlEventTouchUpInside];
                
                [viTick addSubview:img];
                [viTick addSubview:btnSelectTick];
                [headerView addSubview:viTick];
                
        }
        */
        
        return headerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
        NSInteger height=0;
        
        switch (level) {
                case 1:
                        switch (section) {
                        case 0:
                                height=100.0f;
                                break;
                        case 1:
                                height=50.0f;
                                        break;
                        case 2:
                                height=30.0f;
                                break;
                        default:
                                break;
                        }
                        
                        break;
                case 2:
                        switch (section) {
                                case 1:
                                case 2:
                                
                                        height=50.0f;
                                        break;
                                case 3:
                                        height=30.0f;
                                        break;
                                default:
                                        break;
                        }
                        
                        break;
                case 3:
                        
                        switch (section) {
                                case 0:
                                        height=50.0f;
                                        break;
                                case 1:
                                        height=40.0f;
                                        break;
                                case 2:
                                        height=50.0f;
                                        break;
                                case 3:
                                        height=40.0f;
                                        break;
                                case 4:
                                        height=50.0f;
                                        break;
                                case 5:
                                        height=50.0f;
                                        break;
                                case 6:
                                        height=40.0f;
                                        break;
                                case 7:
                                        height=0.0f;
                                        break;
                                case 8:
                                        height=10.0f;
                                        break;
                                
                                        
                                default:
                                        break;
                        }
                        break;
                default:
                        break;
        }
        
        return height;
}



#pragma Mark - UITextField Delegate Methods

-(BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
        
        [textField resignFirstResponder];
        
        NSIndexPath *indexPath =[Alert getIndexPathWithTextfield:textField table:self.tableView];
        /*
        switch (level) {
                case 3:
                {
                        switch (indexPath.section) {
                                case 5:
                                {
                                        switch (indexPath.row) {
                                                case 2:
                                                {
                                                        isDate=YES;
                                                        [self createDatePicker:NO items:nil sender:textField datePickerMode:(UIDatePickerModeDate)];
                                                        return NO;
                                                }
                                                        break;
                                                case 3:
                                                {
                                                        isDate=YES;
                                                        [self createDatePicker:NO items:nil sender:textField datePickerMode:(UIDatePickerModeDate)];
                                                        return NO;
                                                }
                                                        break;
         
                                                default:
         
                                                        break;
                                        }
         
         
                                }
                                        break;
         
                                default:
                                        break;
                        }
         
                }
                        break;
         
                default:
                        break;
        }
        */
        
        
        if(!isUpdateHeight){
                
                self.tableView.frame= CGRectMake(self.tableView.frame.origin.x,
                                                 self.tableView.frame.origin.y,
                                                 self.tableView.frame.size.width,
                                                 self.tableView.frame.size.height - 216);
        }
        
        
        
        [self.tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionTop animated:YES];
        
        isUpdateHeight=YES;
        
        return YES;
        
}

-(void)textFieldDidBeginEditing:(UITextField *)textField{
        
}

-(BOOL)textFieldShouldReturn:(UITextField *)textField{
        [textField resignFirstResponder];
        
        NSIndexPath *indexPathOriginal =[Alert getIndexPathWithTextfield:textField table:self.tableView];
        
        switch (level) {
                case 1:
                {
                        UpdateProfileViewCell * cell;
                        
                        switch (indexPathOriginal.row) {
                                case 0:
                                case 1:
                                case 2:
                                        if(!IS_EMPTY(textField.text)){
                                                BOOL isName=[Alert validationString:textField.text];
                                                
                                                if(!isName){
                                                        [Alert alertWithMessage:@"Invalid name ! Please enter valid name."
                                                                     navigation:self.navigationController
                                                                       gotoBack:NO animation:YES];
                                                        [textField becomeFirstResponder];
                                                        
                                                }
                                                else{
                                                        cell=[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:textField.tag+1 inSection:indexPathOriginal.section]];
                                                        [cell.txtName becomeFirstResponder];
                                                        
                                                }
                                        }
                                        break;
                                case 3:
                                        if(!IS_EMPTY(textField.text)){
                                                BOOL isEmail=[Alert validationEmail:textField.text];
                                                
                                                if(!isEmail){
                                                        [Alert alertWithMessage:@"Invalid email ! Please enter valid email."
                                                                     navigation:self.navigationController
                                                                       gotoBack:NO animation:YES];
                                                        [textField becomeFirstResponder];
                                                        
                                                }
                                                else{
                                                        cell=[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:textField.tag+1 inSection:indexPathOriginal.section]];
                                                        [cell.txtName becomeFirstResponder];
                                                        
                                                }
                                        }
                                        break;
                                case 4:
                                        if(!IS_EMPTY(textField.text)){
                                                BOOL isMobile=[Alert validateMobileNumber:textField.text];
                                                
                                                if(!isMobile){
                                                        [Alert alertWithMessage:@"Invalid phone ! Please enter valid phone number."
                                                                     navigation:self.navigationController
                                                                       gotoBack:NO animation:YES];
                                                        [textField becomeFirstResponder];
                                                        
                                                }
                                                else{
                                                        NSIndexPath *indexPath =[NSIndexPath indexPathForRow:0 inSection:indexPathOriginal.section];
                                                        [self.tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionTop animated:YES];
                                                        
                                                }
                                        }
                                        break;
                                        
                                default:
                                        break;
                        }
                        
                        
                }
                        break;
                case 2:
                {
                        RegistrationViewCell * cell;
                        
                        switch (indexPathOriginal.row) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                        if(!IS_EMPTY(textField.text)){
                                                        cell=[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:textField.tag+1 inSection:indexPathOriginal.section]];
                                                        [cell.txtName becomeFirstResponder];
                                        }
                                        break;
                                
                                        
                                default:
                                        break;
                        }
                        
                        
                }
                        break;
                case 3:
                {
                        RegistrationViewCell * cell;
                        
                        switch (indexPathOriginal.section) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                        if(!IS_EMPTY(textField.text)){
                                                cell=[self.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:indexPathOriginal.section+1]];
                                                [cell.txtName becomeFirstResponder];
                                        }
                                        break;
                                        
                                        
                                default:
                                        break;
                        }
                        
                        
                }
                        break;                default:
                        break;
        }
        
        if(isUpdateHeight){
                
                
                self.tableView.frame= CGRectMake(self.tableView.frame.origin.x,
                                                 self.tableView.frame.origin.y,
                                                 self.tableView.frame.size.width,
                                                 self.tableView.frame.size.height+216);
                
        }
        
        isUpdateHeight=NO;
        
        
        return YES;
}

-(void)textFieldDidChange:(id)sender{
        //        isUpdate=YES;
        UITextField* txt=(UITextField*)sender;
        
        NSIndexPath *indexPath =[Alert getIndexPathWithTextfield:txt table:self.tableView];
        //
        switch (level) {
                case 1:
                {
                        BOOL isValid=NO;
                        //
                        
                        switch (indexPath.row) {
                                case 0:
                                case 1:
                                case 2:
                                        isValid=[Alert validationString:txt.text];
                                        break;
                                case 3:
                                        isValid=[Alert validationEmail:txt.text];
                                        break;
                                case 4:
                                        isValid=[Alert validateMobileNumber:txt.text];
                                        break;
                                        
                                default:
                                        isValid=YES;
                                        break;
                        }
                        
                        
                        txt.textColor=isValid ? [UIColor blackColor] : [UIColor redColor];
                        
                        NSMutableDictionary* dic=[arrData1 objectAtIndex:txt.tag];
                        
                        [dic setObject:txt.text forKey:@"value"];
                }
                        break;
                case 2:
                {
                        BOOL isValid=NO;
                        //
                        /*
                        switch (indexPath.row) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                        isValid=[Alert validationString:txt.text];
                                        break;
                                        
                                default:
                                        isValid=YES;
                                        break;
                        }
                         */
                        
                        isValid=YES;
                        
                        txt.textColor=isValid ? [UIColor blackColor] : [UIColor redColor];
                        
                        NSMutableDictionary* dic=[arrData2 objectAtIndex:txt.tag];
                        
                        [dic setObject:txt.text forKey:@"value"];
                }
                        break;
                case 3:
                {
                        BOOL isValid=NO;
                        //
                        
                        switch (indexPath.section) {
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                        isValid=[Alert validationString:txt.text];
                                        break;
                                        
                                default:
                                        isValid=YES;
                                        break;
                        }
                        
                        
                        txt.textColor=isValid ? [UIColor blackColor] : [UIColor redColor];
                        
                        NSMutableDictionary* dic=[arrData3 objectAtIndex:txt.tag];
                        
                        [dic setObject:txt.text forKey:@"value"];
                }
                        break;

                        
                default:
                        break;
        }
        
}


#pragma mark - Validate Levels

-(NSArray*)matchPathWithArray:(NSArray*)list{
        
        NSPredicate *predicate = [NSPredicate predicateWithFormat:@"path.length > 0"];
        NSArray *matchingObjs = [list filteredArrayUsingPredicate:predicate];
        
        if ([matchingObjs count] == 0)
        {
                //NSLog(@"No match");
                return nil;
        }
        else
        {
                //NSLog(@"Matched");
                return matchingObjs;
        }
}

-(NSArray*)matchSelectionWithArray:(NSArray*)list{
        
        NSPredicate *predicate = [NSPredicate predicateWithFormat:@"value = 1"];
        NSArray *matchingObjs = [list filteredArrayUsingPredicate:predicate];
        
        if ([matchingObjs count] == 0)
        {
                //NSLog(@"No match");
                return nil;
        }
        else
        {
                //NSLog(@"Matched");
                return matchingObjs;
        }
}

-(BOOL)isLevel1{
        BOOL isValid=NO;
        
        NSIndexPath* index0=[NSIndexPath indexPathForRow:0 inSection:0];
        NSIndexPath* index1=[NSIndexPath indexPathForRow:1 inSection:0];
        NSIndexPath* index2=[NSIndexPath indexPathForRow:2 inSection:0];
        NSIndexPath* index3=[NSIndexPath indexPathForRow:3 inSection:0];
        NSIndexPath* index4=[NSIndexPath indexPathForRow:4 inSection:0];
        NSIndexPath* index5=[NSIndexPath indexPathForRow:0 inSection:1];
        
        if(!IS_EMPTY([[arrData1 objectAtIndex:0] objectForKey:@"value"]) &&
           !IS_EMPTY([[arrData1 objectAtIndex:3] objectForKey:@"value"]) ) {
                BOOL isFName    =[Alert validationString:[[arrData1 objectAtIndex:0] objectForKey:@"value"]];
                BOOL isMName    =[Alert validationString:[[arrData1 objectAtIndex:1] objectForKey:@"value"]];
                BOOL isMValue   =!IS_EMPTY([[arrData1 objectAtIndex:1] objectForKey:@"value"]);
                BOOL isLName    =[Alert validationString:[[arrData1 objectAtIndex:2] objectForKey:@"value"]];
                BOOL isLValue   =!IS_EMPTY([[arrData1 objectAtIndex:2] objectForKey:@"value"]);
                BOOL isEmail    =[Alert validationEmail:[[arrData1 objectAtIndex:3] objectForKey:@"value"]];
                BOOL isPhone    =[Alert validateMobileNumber:[[arrData1 objectAtIndex:4] objectForKey:@"value"]];
                BOOL isPValue   =!IS_EMPTY([[arrData1 objectAtIndex:4] objectForKey:@"value"]);
                NSArray* arrImages= [self matchPathWithArray:arrMultipleArt];
                
                if(!isFName){
                        [Alert alertWithMessage:@"Invalid Fisrt Name ! Please enter valid first name."
                                     navigation:self.navigationController
                                       gotoBack:NO animation:YES second:3.0];
                        [self.tableView scrollToRowAtIndexPath:index0 atScrollPosition:UITableViewScrollPositionTop animated:YES];
                        
                }
                else if(!isMName && isMValue){
                        [Alert alertWithMessage:@"Invalid Middle Name ! Please enter valid middle name or leave blank field."
                                     navigation:self.navigationController
                                       gotoBack:NO animation:YES second:3.0];
                        [self.tableView scrollToRowAtIndexPath:index1 atScrollPosition:UITableViewScrollPositionTop animated:YES];
                }
                else if (!isLName && isLValue){
                        [Alert alertWithMessage:@"Invalid Last Name ! Please enter valid last name or leave blank field."
                                     navigation:self.navigationController
                                       gotoBack:NO animation:YES second:3.0];
                        [self.tableView scrollToRowAtIndexPath:index2 atScrollPosition:UITableViewScrollPositionTop animated:YES];
                }
                else if (!isEmail){
                        [Alert alertWithMessage:@"Invalid Email ! Please enter valid email."
                                     navigation:self.navigationController
                                       gotoBack:NO animation:YES second:3.0];
                        [self.tableView scrollToRowAtIndexPath:index3 atScrollPosition:UITableViewScrollPositionTop animated:YES];
                }
                else if (!isPhone && isPValue){
                        [Alert alertWithMessage:@"Invalid Phone Number ! Please enter valid phone number."
                                     navigation:self.navigationController
                                       gotoBack:NO animation:YES second:3.0];
                        [self.tableView scrollToRowAtIndexPath:index4 atScrollPosition:UITableViewScrollPositionTop animated:YES];
                }
                else if (arrImages.count<1){
                        [Alert alertWithMessage:[NSString stringWithFormat:@"%d remaining images ! Please choose at least 3 images",1]
                                     navigation:self.navigationController
                                       gotoBack:NO animation:YES second:3.0];
                        [self.tableView scrollToRowAtIndexPath:index5 atScrollPosition:UITableViewScrollPositionTop animated:YES];
                }
                else
                {
                        isValid=YES;
                }
        }
        else
        {
                [[[UIAlertView alloc] initWithTitle:@""
                                            message:@"Mandatory (*) Fields can not be blank!"
                                           delegate:nil
                                  cancelButtonTitle:@"OK"
                                  otherButtonTitles: nil]show];
                
                
        }
        
        
        
        return isValid;
        
}

-(BOOL)isLevel2{
        BOOL isValid=NO;
        
        NSIndexPath* index0=[NSIndexPath indexPathForRow:0 inSection:1];
        
        if(!IS_EMPTY([[arrData2 objectAtIndex:1] objectForKey:@"value"]) &&
           !IS_EMPTY([[arrData2 objectAtIndex:2] objectForKey:@"value"]) &&
           !IS_EMPTY([[arrData2 objectAtIndex:4] objectForKey:@"value"]) &&
           !IS_EMPTY([[arrData2 objectAtIndex:5] objectForKey:@"value"]) ) {
                
//                NSArray* arrCer= [self matchPathWithArray:arrCertificates];
                
//                if (arrCer.count<2){
//                        [Alert alertWithMessage:@"Missing file ! Please choose file ."
//                                     navigation:self.navigationController
//                                       gotoBack:NO animation:YES second:3.0];
//                        [self.tableView scrollToRowAtIndexPath:index0 atScrollPosition:UITableViewScrollPositionTop animated:YES];
//                }
//                else
//                {
                        isValid=YES;
//                }
        }
        else
        {
                [[[UIAlertView alloc] initWithTitle:@""
                                            message:@"Mandatory (*) Fields can not be blank!"
                                           delegate:nil
                                  cancelButtonTitle:@"OK"
                                  otherButtonTitles: nil]show];
                
                
        }
        
        
        return isValid;
}

-(BOOL)isLevel3{
        
        BOOL isValid=NO;
        
        NSArray* arrSel= [self matchSelectionWithArray:arrSelections];
        
        if(arrSel.count==3)
        {
                isValid=YES;
        }
        else
        {
                [[[UIAlertView alloc] initWithTitle:@""
                                            message:@"Mandatory (*) Fields can not be blank!"
                                           delegate:nil
                                  cancelButtonTitle:@"OK"
                                  otherButtonTitles: nil]show];
                
                
        }
        
        
        return isValid;
}

-(BOOL)isValidateLevel{
        BOOL isValid=NO;
        
        
        switch (level) {
                case 1:
                        isValid=[self isLevel1];
                        break;
                case 2:
                        isValid=[self isLevel2];
                        break;
                case 3:
                        isValid=[self isLevel3];
                        break;
                        
                default:
                        break;
        }
        
        
        return isValid;
}


#pragma mark - Target Support methods

-(void)addMoreFile{
        
        NSMutableDictionary* dic=[NSMutableDictionary dictionary];
        
        [dic setObject:@""                                              forKey:@"path"];
        [dic setObject:[[UIImage alloc] init]                           forKey:@"image"];
        [arrMultipleArt addObject:dic];
        
        switch (level) {
                case 1:
                {
                        NSIndexPath *indexPath =[NSIndexPath indexPathForRow:0 inSection:1];
                        [self.tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionTop animated:YES];
                }
                        break;
                default:
                        break;
        }
        
        
        
}

-(void)removeFile:(NSInteger)index{
        
        [arrMultipleArt removeObjectAtIndex:index];
}


#pragma mark - Target Methods

-(IBAction)chooseFile:(id)sender{
        UIButton* button=(UIButton*)sender;
        
        NSIndexPath *indexPath =[Alert getIndexPathWithButton:button table:self.tableView];
        
        __weak __typeof(self)weakSelf = self;
        
        [QMImagePicker chooseSourceTypeInVC:self allowsEditing:YES isVideo:NO result:^(UIImage *image,NSURL* videoURL) {
                
                NSMutableDictionary* dic;
                switch (level) {
                        case 1:
                                dic=[arrMultipleArt objectAtIndex:indexPath.row];
                                break;
                        case 2:
                                dic=[arrCertificates objectAtIndex:indexPath.section==1 ? 0 : 1];
                                break;
                                
                        default:
                                break;
                }

                [dic setObject:[Alert getNameForImage] forKey:@"path"];
                [dic setObject:image forKey:@"image"];
                
                [Alert reloadSection:indexPath.section table:weakSelf.tableView];
                
        }];
        
}

-(IBAction)addMore:(id)sender{
        UIButton* button=(UIButton*)sender;
        
        NSIndexPath *indexPath =[Alert getIndexPathWithButton:button table:self.tableView];
        switch (level) {
                case 1:
                        switch (indexPath.section) {
                                case 1:
                                {
                                        
                                        if(indexPath.row==0)
                                                [self addMoreFile];
                                        else
                                                [self removeFile:indexPath.row];
                                }
                                        break;
                                        /*
                                         case 4:
                                         {
                                         
                                         if(indexPath.row==0)
                                         [self addMoreYoutubeVideo];
                                         else
                                         [self removeYoutubeVideo:indexPath.row];
                                         }
                                         */
                                        break;
                                        
                                default:
                                        break;
                        }
                        break;
                default:
                        break;
        }

        
        
        [Alert reloadSection:indexPath.section table:self.tableView];
        //        [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];
}

-(IBAction)backMove:(id)sender{
        
        if(level<=1) return;
        level-=1;
        
        [self reSetStepIcon];
        
        [self.tableView reloadData];
}

-(IBAction)next:(id)sender{
 
        if(![self isValidateLevel]) return;
        
        if(level==3){
                
                [self  valuationofArts];
                
        }
        if(level>=3) return;
        level+=1;
        
        [self reSetStepIcon];
        [self.tableView reloadData];
  
}

-(void)valuationofArts{
        
       
      /*
        {
                "user_id": "92",
                "first_name": "Deepak",
                "middle_name": "kumar",
                "last_name": "singh",
                "email_id": "deepak@gmail.com",
                "phone_number": "123",
                "artist_name": "deepak",
                "images": "images",
                "artwork_size": "250",
                "artwork_medium": "350",
                "artwork_complete": "92",
                "artist_bio": "hello",
                "artist_critiques": "artistcritiques",
                "museum_purchased": "museumpurchased",
                "additional_agreement": "additionalagreement",
                "initial_opinion_agreement": "initial opinion agreement",
                "art_provenance": "art_provenance",
                "purchased_details": "purchased_details",
                "exhibitions_details": "exhibitions_details",
                "place_originated": "place_originated",
                "artwork_sold_auction": "artwork_sold_auction",
                "artwork_sold_by_artist": "artwork_sold_by_artist",
                "other_information": "other_information",
                "correct_info_agreement": "correct_info_agreement"
        }
        */
        //images[],authenticity_certificate,photo_signature
        
        NSMutableDictionary* dic=[NSMutableDictionary dictionary];
        
        [dic setObject:[[EAGallery sharedClass] memberID] forKey:@"user_id"];

        //Step 1 :
        [dic setObject:[[arrData1 objectAtIndex:0] objectForKey:@"value"] forKey:@"first_name"];
        [dic setObject:[[arrData1 objectAtIndex:1] objectForKey:@"value"] forKey:@"middle_name"];
        [dic setObject:[[arrData1 objectAtIndex:2] objectForKey:@"value"] forKey:@"last_name"];
        [dic setObject:[[arrData1 objectAtIndex:3] objectForKey:@"value"] forKey:@"email_id"];
        [dic setObject:[[arrData1 objectAtIndex:4] objectForKey:@"value"] forKey:@"phone_number"];
        
        
        //Step 2 :
        [dic setObject:[[arrData2 objectAtIndex:0] objectForKey:@"value"] forKey:@"artist_name"];
        [dic setObject:[[arrData2 objectAtIndex:1] objectForKey:@"value"] forKey:@"artwork_size"];
        [dic setObject:[[arrData2 objectAtIndex:2] objectForKey:@"value"] forKey:@"artwork_medium"];
        [dic setObject:[[arrData2 objectAtIndex:3] objectForKey:@"value"] forKey:@"artwork_complete"];
        [dic setObject:[[arrData2 objectAtIndex:4] objectForKey:@"value"] forKey:@"artist_bio"];
        [dic setObject:[[arrData2 objectAtIndex:5] objectForKey:@"value"] forKey:@"artist_critiques"];
        [dic setObject:[[arrData2 objectAtIndex:6] objectForKey:@"value"] forKey:@"museum_purchased"];
        
        
        //Step 3 :
        [dic setObject:[[arrData3 objectAtIndex:0] objectForKey:@"value"] forKey:@"art_provenance"];
        [dic setObject:[[arrData3 objectAtIndex:1] objectForKey:@"value"] forKey:@"purchased_details"];
        [dic setObject:[[arrData3 objectAtIndex:2] objectForKey:@"value"] forKey:@"exhibitions_details"];
        [dic setObject:[[arrData3 objectAtIndex:3] objectForKey:@"value"] forKey:@"place_originated"];
        [dic setObject:[[arrData3 objectAtIndex:4] objectForKey:@"value"] forKey:@"artwork_sold_auction"];
        [dic setObject:[[arrData3 objectAtIndex:5] objectForKey:@"value"] forKey:@"artwork_sold_by_artist"];
        [dic setObject:[[arrData3 objectAtIndex:6] objectForKey:@"value"] forKey:@"other_information"];
        
        NSNumber* s1=[[arrSelections objectAtIndex:0]objectForKey:@"value"];
        NSNumber* s2=[[arrSelections objectAtIndex:1]objectForKey:@"value"];
        NSNumber* s3=[[arrSelections objectAtIndex:2]objectForKey:@"value"];
        
        
        [dic setObject:[s1 stringValue] forKey:@"additional_agreement"];
        [dic setObject:[s2 stringValue] forKey:@"correct_info_agreement"];
        [dic setObject:[s3 stringValue] forKey:@"initial_opinion_agreement"];
        
        
        
        NSLog(@"%@",dic);
        
        //imagename
        //imagedata
        //imagekey
        
        NSArray* arrArts= [self matchPathWithArray:arrMultipleArt];
        NSMutableArray* arrImages=[[NSMutableArray alloc]init];
        for (NSDictionary* dic in arrArts) {
                
                UIImage* image=[dic objectForKey:@"image"];
                NSString* fileName=[dic objectForKey:@"path"];
                NSData* imageData =image ? UIImageJPEGRepresentation(image, 90) : nil;
                
                if(imageData){
                        NSMutableDictionary* imageDic=[NSMutableDictionary dictionary];
                        [imageDic setObject:imageData           forKey:@"imagedata"];
                        [imageDic setObject:fileName            forKey:@"imagename"];
                        [imageDic setObject:@"images[]"         forKey:@"imagekey"];
                        [arrImages addObject:imageDic];
                }
        }
        
        
        NSArray* arrCer= [self matchPathWithArray:arrCertificates];
        int i=1;
        for (NSDictionary* dic in arrCer) {
                
                UIImage* image=[dic objectForKey:@"image"];
                NSString* fileName=[dic objectForKey:@"path"];
                NSData* imageData =image ? UIImageJPEGRepresentation(image, 90) : nil;
                
                if(imageData){
                        NSMutableDictionary* imageDic=[NSMutableDictionary dictionary];
                        [imageDic setObject:imageData                           forKey:@"imagedata"];
                        [imageDic setObject:fileName                            forKey:@"imagename"];
                        [imageDic setObject:i==1 ? @"authenticity_certificate" : @"photo_signature"         forKey:@"imagekey"];
                        [arrImages addObject:imageDic];
                }
                i++;
        }
        
        
        
        
        
        // NSLog(@"%@",arrImages);
        
        
        
        [self valuationOfArtWebService:[dic mutableCopy] images:arrImages.count? arrImages : nil];
        
        
        
}



@end
